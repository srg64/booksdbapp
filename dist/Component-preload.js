/**
* This file was auto-generated by SAP Web IDE build and includes all
* the source files required by SAPUI5 runtime for performance optimization.
* PLEASE DO NOT EDIT THIS FILE!! Changes will be overwritten the next time the build is run.
*/
jQuery.sap.registerPreloadedModules({
	"version": "2.0",
	"name": "de/asr/library/booksdbapp/Component-preload",
	"modules": {
		"de/asr/library/booksdbapp/Component.js": "sap.ui.define([\r\n\t\"sap/ui/core/UIComponent\",\r\n\t\"sap/ui/Device\",\r\n\t\"de/asr/library/booksdbapp/model/models\",\r\n\t\"de/asr/library/booksdbapp/controller/ListSelector\",\r\n\t\"de/asr/library/booksdbapp/controller/ErrorHandler\"\r\n], function(UIComponent, Device, models, ListSelector, ErrorHandler) {\r\n\t\"use strict\";\r\n\r\n\treturn UIComponent.extend(\"de.asr.library.booksdbapp.Component\", {\r\n\r\n\t\tmetadata: {\r\n\t\t\tmanifest: \"json\"\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * The component is initialized by UI5 automatically during the startup of the app and calls the init method once.\r\n\t\t * In this method, the FLP and device models are set and the router is initialized.\r\n\t\t * @public\r\n\t\t * @override\r\n\t\t */\r\n\t\tinit: function() {\r\n\t\t\tthis.oListSelector = new ListSelector();\r\n\t\t\tthis._oErrorHandler = new ErrorHandler(this);\r\n\r\n\t\t\t// set the device model\r\n\t\t\tthis.setModel(models.createDeviceModel(), \"device\");\r\n\t\t\t// set the FLP model\r\n\t\t\tthis.setModel(models.createFLPModel(), \"FLP\");\r\n\r\n\t\t\t// call the base component's init function and create the App view\r\n\t\t\tUIComponent.prototype.init.apply(this, arguments);\r\n\r\n\t\t\t// create the views based on the url/hash\r\n\t\t\tthis.getRouter().initialize();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * The component is destroyed by UI5 automatically.\r\n\t\t * In this method, the ListSelector and ErrorHandler are destroyed.\r\n\t\t * @public\r\n\t\t * @override\r\n\t\t */\r\n\t\tdestroy: function() {\r\n\t\t\tthis.oListSelector.destroy();\r\n\t\t\tthis._oErrorHandler.destroy();\r\n\t\t\t// call the base component's destroy function\r\n\t\t\tUIComponent.prototype.destroy.apply(this, arguments);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * This method can be called to determine whether the sapUiSizeCompact or sapUiSizeCozy\r\n\t\t * design mode class should be set, which influences the size appearance of some controls.\r\n\t\t * @public\r\n\t\t * @return {string} css class, either 'sapUiSizeCompact' or 'sapUiSizeCozy' - or an empty string if no css class should be set\r\n\t\t */\r\n\t\tgetContentDensityClass: function() {\r\n\t\t\tif (this._sContentDensityClass === undefined) {\r\n\t\t\t\t// check whether FLP has already set the content density class; do nothing in this case\r\n\t\t\t\tif (jQuery(document.body).hasClass(\"sapUiSizeCozy\") || jQuery(document.body).hasClass(\"sapUiSizeCompact\")) {\r\n\t\t\t\t\tthis._sContentDensityClass = \"\";\r\n\t\t\t\t} else if (!Device.support.touch) { // apply \"compact\" mode if touch is not supported\r\n\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCompact\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// \"cozy\" in case of touch support; default for most sap.m controls, but needed for desktop-first controls like sap.ui.table.Table\r\n\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCozy\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this._sContentDensityClass;\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"de/asr/library/booksdbapp/controller/Detail.controller.js": "/*global location */\nsap.ui.define([\n\t\"de/asr/library/booksdbapp/controller/BaseController\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"de/asr/library/booksdbapp/model/formatter\",\n\t\"sap/m/MessageBox\",\n\t\"sap/m/MessageToast\"\n], function(BaseController, JSONModel, formatter, MessageBox, MessageToast) {\n\t\"use strict\";\n\n\treturn BaseController.extend(\"de.asr.library.booksdbapp.controller.Detail\", {\n\n\t\tformatter: formatter,\n\n\t\t/* =========================================================== */\n\t\t/* lifecycle methods                                           */\n\t\t/* =========================================================== */\n\n\t\tonInit: function() {\n\t\t\t// Model used to manipulate control states. The chosen values make sure,\n\t\t\t// detail page is busy indication immediately so there is no break in\n\t\t\t// between the busy indication for loading the view's meta data\n\t\t\tvar oViewModel = new JSONModel({\n\t\t\t\tbusy: false,\n\t\t\t\tdelay: 0\n//\t\t\t\t,\n//\t\t\t\tlineItemListTitle: this.getResourceBundle().getText(\"detailLineItemTableHeading\")\n\t\t\t});\n\n\t\t\tthis.getRouter().getRoute(\"object\").attachPatternMatched(this._onObjectMatched, this);\n\t\t\tthis.setModel(oViewModel, \"detailView\");\n\t\t\tthis.getOwnerComponent().getModel().metadataLoaded().then(this._onMetadataLoaded.bind(this));\n\t\t\tthis._oODataModel = this.getOwnerComponent().getModel();\n\t\t\tthis._oResourceBundle = this.getResourceBundle();\n\t\t},\n\n\t\t/* =========================================================== */\n\t\t/* event handlers                                              */\n\t\t/* =========================================================== */\n\n\t\t/**\n\t\t * Event handler when the share by E-Mail button has been clicked\n\t\t * @public\n\t\t */\n\t\tonShareEmailPress: function() {\n\t\t\tvar oViewModel = this.getModel(\"detailView\");\n\n\t\t\tsap.m.URLHelper.triggerEmail(\n\t\t\t\tnull,\n\t\t\t\toViewModel.getProperty(\"/shareSendEmailSubject\"),\n\t\t\t\toViewModel.getProperty(\"/shareSendEmailMessage\")\n\t\t\t);\n\t\t},\n\n\t\t/**\n\t\t * Event handler when the share in JAM button has been clicked\n\t\t * @public\n\t\t */\n\t\tonShareInJamPress: function() {\n\t\t\tvar oViewModel = this.getModel(\"detailView\"),\n\t\t\t\toShareDialog = sap.ui.getCore().createComponent({\n\t\t\t\t\tname: \"sap.collaboration.components.fiori.sharing.dialog\",\n\t\t\t\t\tsettings: {\n\t\t\t\t\t\tobject: {\n\t\t\t\t\t\t\tid: location.href,\n\t\t\t\t\t\t\tshare: oViewModel.getProperty(\"/shareOnJamTitle\")\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\toShareDialog.open();\n\t\t},\n\n\t\t/**\n\t\t * Updates the item count within the line item table's header\n\t\t * @param {object} oEvent an event containing the total number of items in the list\n\t\t * @private\n\t\t */\n/*\n\t\tonListUpdateFinished: function(oEvent) {\n\t\t\tvar sTitle,\n\t\t\t\tiTotalItems = oEvent.getParameter(\"total\"),\n\t\t\t\toViewModel = this.getModel(\"detailView\");\n\n\t\t\t// only update the counter if the length is final\n\t\t\tif (this.byId(\"lineItemsList\").getBinding(\"items\").isLengthFinal()) {\n\t\t\t\tif (iTotalItems) {\n\t\t\t\t\tsTitle = this.getResourceBundle().getText(\"detailLineItemTableHeadingCount\", [iTotalItems]);\n\t\t\t\t} else {\n\t\t\t\t\t//Display 'Line Items' instead of 'Line items (0)'\n\t\t\t\t\tsTitle = this.getResourceBundle().getText(\"detailLineItemTableHeading\");\n\t\t\t\t}\n\t\t\t\toViewModel.setProperty(\"/lineItemListTitle\", sTitle);\n\t\t\t}\n\t\t},\n*/\n\n\t\t/**\n\t\t * Event handler (attached declaratively) for the view delete button. Deletes the selected item.\n\t\t * @function\n\t\t * @public\n\t\t */\n\t\tonDelete: function() {\n\t\t\tvar that = this;\n\t\t\tvar oViewModel = this.getModel(\"detailView\"),\n\t\t\t\tsPath = oViewModel.getProperty(\"/sObjectPath\"),\n\t\t\t\tsObjectHeader = this._oODataModel.getProperty(sPath + \"/Title\"),\n\t\t\t\tsQuestion = this._oResourceBundle.getText(\"deleteText\", sObjectHeader),\n\t\t\t\tsSuccessMessage = this._oResourceBundle.getText(\"deleteSuccess\", sObjectHeader);\n\n\t\t\tvar fnMyAfterDeleted = function() {\n\t\t\t\tMessageToast.show(sSuccessMessage);\n\t\t\t\toViewModel.setProperty(\"/busy\", false);\n\t\t\t\tvar oNextItemToSelect = that.getOwnerComponent().oListSelector.findNextItem(sPath);\n\t\t\t\tthat.getModel(\"appView\").setProperty(\"/itemToSelect\", oNextItemToSelect.getBindingContext().getPath()); //save last deleted\n\t\t\t};\n\t\t\tthis._confirmDeletionByUser({\n\t\t\t\tquestion: sQuestion\n\t\t\t}, [sPath], fnMyAfterDeleted);\n\t\t},\n\n\t\t/**\n\t\t * Event handler (attached declaratively) for the view edit button. Open a view to enable the user update the selected item.\n\t\t * @function\n\t\t * @public\n\t\t */\n\t\tonEdit: function() {\n\t\t\tthis.getModel(\"appView\").setProperty(\"/addEnabled\", false);\n\t\t\tvar sObjectPath = this.getView().getElementBinding().getPath();\n\t\t\tthis.getRouter().getTargets().display(\"create\", {\n\t\t\t\tmode: \"update\",\n\t\t\t\tobjectPath: sObjectPath\n\t\t\t});\n\t\t},\n\n\t\t/* =========================================================== */\n\t\t/* begin: internal methods                                     */\n\t\t/* =========================================================== */\n\n\t\t/**\n\t\t * Binds the view to the object path and expands the aggregated line items.\n\t\t * @function\n\t\t * @param {sap.ui.base.Event} oEvent pattern match event in route 'object'\n\t\t * @private\n\t\t */\n\t\t_onObjectMatched: function(oEvent) {\n\t\t\tvar oParameter = oEvent.getParameter(\"arguments\");\n\t\t\tfor (var value in oParameter) {\n\t\t\t\toParameter[value] = decodeURIComponent(oParameter[value]);\n\t\t\t}\n\t\t\tthis.getModel().metadataLoaded().then(function() {\n\t\t\t\tvar sObjectPath = this.getModel().createKey(\"Books\", oParameter);\n\t\t\t\tif (this.getModel().getProperty(sObjectPath) === null) {\n    \t\t\t\t// There is a problem, if we are using the mockserver, because he returns objects like Books(1234) instead of Books1234L.\n    \t\t\t\t// Create the correct path for the mock server\n\t\t\t\t    sObjectPath = \"Books(\" + oParameter.Id + \")\";\n\t\t\t\t}\n\t\t\t\tthis._bindView(\"/\" + sObjectPath);\n\t\t\t}.bind(this));\n\t\t},\n\n\t\t/**\n\t\t * Binds the view to the object path. Makes sure that detail view displays\n\t\t * a busy indicator while data for the corresponding element binding is loaded.\n\t\t * @function\n\t\t * @param {string} sObjectPath path to the object to be bound to the view.\n\t\t * @private\n\t\t */\n\t\t_bindView: function(sObjectPath) {\n\t\t\t// Set busy indicator during view binding\n\t\t\tvar oViewModel = this.getModel(\"detailView\");\n\n\t\t\t// If the view was not bound yet its not busy, only if the binding requests data it is set to busy again\n\t\t\toViewModel.setProperty(\"/busy\", false);\n\n\t\t\tthis.getView().bindElement({\n\t\t\t\tpath: sObjectPath,\n\t\t\t\tevents: {\n\t\t\t\t\tchange: this._onBindingChange.bind(this),\n\t\t\t\t\tdataRequested: function() {\n\t\t\t\t\t\toViewModel.setProperty(\"/busy\", true);\n\t\t\t\t\t},\n\t\t\t\t\tdataReceived: function() {\n\t\t\t\t\t\toViewModel.setProperty(\"/busy\", false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Event handler for binding change event\n\t\t * @function\n\t\t * @private\n\t\t */\n\n\t\t_onBindingChange: function() {\n\t\t\tvar oView = this.getView(),\n\t\t\t\toElementBinding = oView.getElementBinding(),\n\t\t\t\toViewModel = this.getModel(\"detailView\"),\n\t\t\t\toAppViewModel = this.getModel(\"appView\");\n\n\t\t\t// No data for the binding\n\t\t\tif (!oElementBinding.getBoundContext()) {\n\t\t\t\tthis.getRouter().getTargets().display(\"detailObjectNotFound\");\n\t\t\t\t// if object could not be found, the selection in the master list\n\t\t\t\t// does not make sense anymore.\n\t\t\t\tthis.getOwnerComponent().oListSelector.clearMasterListSelection();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar sPath = oElementBinding.getBoundContext().getPath(),\n\t\t\t\toResourceBundle = this.getResourceBundle(),\n\t\t\t\toObject = oView.getModel().getObject(sPath),\n\t\t\t\tsObjectId = oObject.Id,\n\t\t\t\tsObjectName = oObject.Title;\n\n\t\t\toViewModel.setProperty(\"/sObjectId\", sObjectId);\n\t\t\toViewModel.setProperty(\"/sObjectPath\", sPath);\n\t\t\toAppViewModel.setProperty(\"/itemToSelect\", sPath);\n\t\t\tthis.getOwnerComponent().oListSelector.selectAListItem(sPath);\n\n\t\t\toViewModel.setProperty(\"/saveAsTileTitle\", oResourceBundle.getText(\"shareSaveTileAppTitle\", [sObjectName]));\n\t\t\toViewModel.setProperty(\"/shareOnJamTitle\", sObjectName);\n\t\t\toViewModel.setProperty(\"/shareSendEmailSubject\",\n\t\t\t\toResourceBundle.getText(\"shareSendEmailObjectSubject\", [sObjectId]));\n\t\t\toViewModel.setProperty(\"/shareSendEmailMessage\",\n\t\t\t\toResourceBundle.getText(\"shareSendEmailObjectMessage\", [sObjectName, sObjectId, location.href]));\n\t\t},\n\n\t\t/**\n\t\t * Event handler for metadata loaded event\n\t\t * @function\n\t\t * @private\n\t\t */\n\n\t\t_onMetadataLoaded: function() {\n\t\t\t// Store original busy indicator delay for the detail view\n\t\t\tvar iOriginalViewBusyDelay = this.getView().getBusyIndicatorDelay();\n\t\t\tvar oViewModel = this.getModel(\"detailView\");\n//\t\t\tvar oLineItemTable = this.byId(\"lineItemsList\");\n//\t\t\tvar iOriginalLineItemTableBusyDelay = oLineItemTable.getBusyIndicatorDelay();\n\n\t\t\t// Make sure busy indicator is displayed immediately when\n\t\t\t// detail view is displayed for the first time\n\t\t\toViewModel.setProperty(\"/delay\", 0);\n/*\n\t\t\toViewModel.setProperty(\"/lineItemTableDelay\", 0);\n\t\t\toLineItemTable.attachEventOnce(\"updateFinished\", function() {\n\t\t\t\t// Restore original busy indicator delay for line item table\n\t\t\t\toViewModel.setProperty(\"/lineItemTableDelay\", iOriginalLineItemTableBusyDelay);\n\t\t\t});\n*/\n\t\t\t// Binding the view will set it to not busy - so the view is always busy if it is not bound\n\t\t\toViewModel.setProperty(\"/busy\", true);\n\t\t\t// Restore original busy indicator delay for the detail view\n\t\t\toViewModel.setProperty(\"/delay\", iOriginalViewBusyDelay);\n\t\t},\n\n\t\t/**\n\t\t * Opens a dialog letting the user either confirm or cancel the deletion of a list of entities\n\t\t * @param {object} oConfirmation - Possesses up to two attributes: question (obligatory) is a string providing the statement presented to the user.\n\t\t * title (optional) may be a string defining the title of the popup.\n\t\t * @param {object} oConfirmation - Possesses up to two attributes: question (obligatory) is a string providing the statement presented to the user.\n\t\t * @param {array} aPaths -  Array of strings representing the context paths to the entities to be deleted. Currently only one is supported.\n\t\t * @param {callback} fnAfterDeleted (optional) - called after deletion is done.\n\t\t * @param {callback} fnDeleteCanceled (optional) - called when the user decides not to perform the deletion\n\t\t * @param {callback} fnDeleteConfirmed (optional) - called when the user decides to perform the deletion. A Promise will be passed\n\t\t * @function\n\t\t * @private\n\t\t */\n\t\t/* eslint-disable */ // using more then 4 parameters for a function is justified here\n\t\t_confirmDeletionByUser: function(oConfirmation, aPaths, fnAfterDeleted, fnDeleteCanceled, fnDeleteConfirmed) {\n\t\t\t/* eslint-enable */\n\t\t\t// Callback function for when the user decides to perform the deletion\n\t\t\tvar fnDelete = function() {\n\t\t\t\t// Calls the oData Delete service\n\t\t\t\tthis._callDelete(aPaths, fnAfterDeleted);\n\t\t\t}.bind(this);\n\n\t\t\t// Opens the confirmation dialog\n\t\t\tMessageBox.show(oConfirmation.question, {\n\t\t\t\ticon: oConfirmation.icon || MessageBox.Icon.WARNING,\n\t\t\t\ttitle: oConfirmation.title || this._oResourceBundle.getText(\"delete\"),\n\t\t\t\tactions: [MessageBox.Action.OK, MessageBox.Action.CANCEL],\n\t\t\t\tonClose: function(oAction) {\n\t\t\t\t\tif (oAction === MessageBox.Action.OK) {\n\t\t\t\t\t\tfnDelete();\n\t\t\t\t\t} else if (fnDeleteCanceled) {\n\t\t\t\t\t\tfnDeleteCanceled();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Performs the deletion of a list of entities.\n\t\t * @param {array} aPaths -  Array of strings representing the context paths to the entities to be deleted. Currently only one is supported.\n\t\t * @param {callback} fnAfterDeleted (optional) - called after deletion is done.\n\t\t * @return a Promise that will be resolved as soon as the deletion process ended successfully.\n\t\t * @function\n\t\t * @private\n\t\t */\n\t\t_callDelete: function(aPaths, fnAfterDeleted) {\n\t\t\tvar oViewModel = this.getModel(\"detailView\");\n\t\t\toViewModel.setProperty(\"/busy\", true);\n\t\t\tvar fnFailed = function(err) {\n\t\t\t    \n\t\t\t    \t\t\t\t\tif (err !== undefined) {\n\t\t\t\t\t\tvar oErrorResponse = $.parseJSON(err.responseText);\n\t\t\t\t\t\tsap.m.MessageToast.show(oErrorResponse.message, {duration: 6000});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsap.m.MessageToast.show(\"Unknown error!\", {duration: 6000});\n\t\t\t\t\t}\n\n\t\t\t    \n\t\t\t    \n\t\t\t\tthis._oODataModel.setUseBatch(true);\n\t\t\t}.bind(this);\n\t\t\tvar fnSuccess = function() {\n\t\t\t\tif (fnAfterDeleted) {\n\t\t\t\t\tfnAfterDeleted();\n\t\t\t\t\tthis._oODataModel.setUseBatch(true);\n\t\t\t\t}\n\t\t\t\toViewModel.setProperty(\"/busy\", false);\n\t\t\t}.bind(this);\n\t\t\treturn this._deleteOneEntity(aPaths[0], fnSuccess, fnFailed);\n\t\t},\n\n\t\t/**\n\t\t * Deletes the entity from the odata model\n\t\t * @param {string} sPath - String representing the context path to the entity to be deleted.\n\t\t * @param {callback} fnSuccess - Event handler for success operation.\n\t\t * @param {callback} fnFailed - Event handler for failure operation.\n\t\t * @function\n\t\t * @private\n\t\t */\n\t\t_deleteOneEntity: function(sPath, fnSuccess, fnFailed) {\n\t\t\tvar oPromise = new Promise(function(fnResolve, fnReject) {\n\t\t\t\tthis._oODataModel.setUseBatch(false);\n\t\t\t\tthis._oODataModel.remove(sPath, {\n\t\t\t\t\tsuccess: fnResolve,\n\t\t\t\t\terror: fnReject,\n\t\t\t\t\tasync: true\n\t\t\t\t});\n\t\t\t}.bind(this));\n\t\t\toPromise.then(fnSuccess, fnFailed);\n\t\t\treturn oPromise;\n\t\t}\n\n\t});\n});",
		"de/asr/library/booksdbapp/controller/App.controller.js": "sap.ui.define([\r\n\t\"de/asr/library/booksdbapp/controller/BaseController\",\r\n\t\"sap/ui/model/json/JSONModel\"\r\n], function(BaseController, JSONModel) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"de.asr.library.booksdbapp.controller.App\", {\r\n\r\n\t\tonInit: function() {\r\n\t\t\tvar oViewModel,\r\n\t\t\t\tfnSetAppNotBusy,\r\n\t\t\t\toListSelector = this.getOwnerComponent().oListSelector,\r\n\t\t\t\tiOriginalBusyDelay = this.getView().getBusyIndicatorDelay();\r\n\r\n\t\t\toViewModel = new JSONModel({\r\n\t\t\t\tbusy: true,\r\n\t\t\t\tdelay: 0,\r\n\t\t\t\titemToSelect: null,\r\n\t\t\t\taddEnabled: false\r\n\r\n\t\t\t});\r\n\t\t\tthis.setModel(oViewModel, \"appView\");\r\n\r\n\t\t\tfnSetAppNotBusy = function() {\r\n\t\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\t\t\t\toViewModel.setProperty(\"/delay\", iOriginalBusyDelay);\r\n\t\t\t};\r\n\r\n\t\t\tthis.getOwnerComponent().getModel().metadataLoaded()\r\n\t\t\t\t.then(fnSetAppNotBusy);\r\n\r\n\t\t\t// Makes sure that master view is hidden in split app\r\n\t\t\t// after a new list entry has been selected.\r\n\t\t\toListSelector.attachListSelectionChange(function() {\r\n\t\t\t\tthis.byId(\"idAppControl\").hideMaster();\r\n\t\t\t}, this);\r\n\r\n\t\t\t// apply content density mode to root view\r\n\t\t\tthis.getView().addStyleClass(this.getOwnerComponent().getContentDensityClass());\r\n\t\t}\r\n\t});\r\n\r\n});",
		"de/asr/library/booksdbapp/controller/BaseController.js": "/*global history */\r\nsap.ui.define([\r\n\t\"sap/ui/core/mvc/Controller\",\r\n\t\"sap/ui/core/routing/History\"\r\n], function(Controller, History) {\r\n\t\"use strict\";\r\n\r\n\treturn Controller.extend(\"de.asr.library.booksdbapp.controller.BaseController\", {\r\n\t\t/**\r\n\t\t * Convenience method for accessing the router in every controller of the application.\r\n\t\t * @public\r\n\t\t * @returns {sap.ui.core.routing.Router} the router for this component\r\n\t\t */\r\n\t\tgetRouter: function() {\r\n\t\t\treturn this.getOwnerComponent().getRouter();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Convenience method for getting the view model by name in every controller of the application.\r\n\t\t * @public\r\n\t\t * @param {string} sName the model name\r\n\t\t * @returns {sap.ui.model.Model} the model instance\r\n\t\t */\r\n\t\tgetModel: function(sName) {\r\n\t\t\treturn this.getView().getModel(sName);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Convenience method for setting the view model in every controller of the application.\r\n\t\t * @public\r\n\t\t * @param {sap.ui.model.Model} oModel the model instance\r\n\t\t * @param {string} sName the model name\r\n\t\t * @returns {sap.ui.mvc.View} the view instance\r\n\t\t */\r\n\t\tsetModel: function(oModel, sName) {\r\n\t\t\treturn this.getView().setModel(oModel, sName);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Convenience method for getting the resource bundle.\r\n\t\t * @public\r\n\t\t * @returns {sap.ui.model.resource.ResourceModel} the resourceModel of the component\r\n\t\t */\r\n\t\tgetResourceBundle: function() {\r\n\t\t\treturn this.getOwnerComponent().getModel(\"i18n\").getResourceBundle();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler  for navigating back.\r\n\t\t * It checks if there is a history entry. If yes, history.go(-1) will happen.\r\n\t\t * If not, it will replace the current entry of the browser history with the master route.\r\n\t\t * @public\r\n\t\t */\r\n\t\tonNavBack: function() {\r\n\t\t\tvar sPreviousHash = History.getInstance().getPreviousHash();\r\n\r\n\t\t\tif (sPreviousHash !== undefined) {\r\n\t\t\t\t// The history contains a previous entry\r\n\t\t\t\thistory.go(-1);\r\n\t\t\t} else {\r\n\t\t\t\t// Otherwise we go backwards with a forward history\r\n\t\t\t\tvar bReplace = true;\r\n\t\t\t\tthis.getRouter().navTo(\"master\", {}, bReplace);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"de/asr/library/booksdbapp/controller/CreateEntity.controller.js": "sap.ui.define([\n\t\"de/asr/library/booksdbapp/controller/BaseController\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/m/MessageBox\"\n\n], function(BaseController, JSONModel, MessageBox) {\n\t\"use strict\";\n\n\treturn BaseController.extend(\"de.asr.library.booksdbapp.controller.CreateEntity\", {\n\n\t\t_oBinding: {},\n\n\t\t/* =========================================================== */\n\t\t/* lifecycle methods                                           */\n\t\t/* =========================================================== */\n\n\t\tonInit: function() {\n\t\t\tvar that = this;\n\t\t\tthis.getRouter().getTargets().getTarget(\"create\").attachDisplay(null, this._onDisplay, this);\n\t\t\tthis._oODataModel = this.getOwnerComponent().getModel();\n\t\t\tthis._oResourceBundle = this.getResourceBundle();\n\t\t\tthis._oViewModel = new JSONModel({\n\t\t\t\tenableCreate: false,\n\t\t\t\tdelay: 0,\n\t\t\t\tbusy: false,\n\t\t\t\tmode: \"create\",\n\t\t\t\tviewTitle: \"\"\n\t\t\t});\n\t\t\tthis.setModel(this._oViewModel, \"viewModel\");\n\n\t\t\t// Register the view with the message manager\n\t\t\tsap.ui.getCore().getMessageManager().registerObject(this.getView(), true);\n\t\t\tvar oMessagesModel = sap.ui.getCore().getMessageManager().getMessageModel();\n\t\t\tthis._oBinding = new sap.ui.model.Binding(oMessagesModel, \"/\", oMessagesModel.getContext(\"/\"));\n\t\t\tthis._oBinding.attachChange(function(oEvent) {\n\t\t\t\tvar aMessages = oEvent.getSource().getModel().getData();\n\t\t\t\tfor (var i = 0; i < aMessages.length; i++) {\n\t\t\t\t\tif (aMessages[i].type === \"Error\" && !aMessages[i].technical) {\n\t\t\t\t\t\tthat._oViewModel.setProperty(\"/enableCreate\", false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t/* =========================================================== */\n\t\t/* event handlers                                              */\n\t\t/* =========================================================== */\n\n\t\t/**\n\t\t * Event handler (attached declaratively) for the view save button. Saves the changes added by the user.\n\t\t * @function\n\t\t * @public\n\t\t */\n\t\tonSave: function() {\n\t\t\tvar that = this,\n\t\t\t\toModel = this.getModel();\n\n\t\t\t// abort if the  model has not been changed\n\t\t\tif (!oModel.hasPendingChanges()) {\n\t\t\t\tMessageBox.information(\n\t\t\t\t\tthis._oResourceBundle.getText(\"noChangesMessage\"), {\n\t\t\t\t\t\tid: \"noChangesInfoMessageBox\",\n\t\t\t\t\t\tstyleClass: that.getOwnerComponent().getContentDensityClass()\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.getModel(\"appView\").setProperty(\"/busy\", true);\n\t\t\tif (this._oViewModel.getProperty(\"/mode\") === \"edit\") {\n\t\t\t\t// attach to the request completed event of the batch\n\t\t\t\toModel.attachEventOnce(\"batchRequestCompleted\", function(oEvent) {\n\t\t\t\t\tvar oParams = oEvent.getParameters();\n\t\t\t\t\tif (oParams.success) {\n\t\t\t\t\t\tthat._fnUpdateSuccess();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthat._fnEntityCreationFailed();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\toModel.submitChanges();\n\t\t},\n\n\t\t/**\n\t\t * Event handler (attached declaratively) for the view cancel button. Asks the user confirmation to discard the changes.\n\t\t * @function\n\t\t * @public\n\t\t */\n\t\tonCancel: function() {\n\t\t\t// check if the model has been changed\n\t\t\tif (this.getModel().hasPendingChanges()) {\n\t\t\t\t// get user confirmation first\n\t\t\t\tthis._showConfirmQuitChanges(); // some other thing here....\n\t\t\t} else {\n\t\t\t\tthis.getModel(\"appView\").setProperty(\"/addEnabled\", true);\n\t\t\t\t// cancel without confirmation\n\t\t\t\tthis._navBack();\n\t\t\t}\n\t\t},\n\n\t\tonScanSuccess: function(event) {\n\t\t\tthis._loadGoogleBook(event.getParameter(\"text\"));\n//  jQuery.sap.require(\"sap.ndc.BarcodeScanner\");\n\t\t},\n\t\t\n\t\tonScanFail: function(event) {\n\t\t\t\n\t\t},\n\t\t\n\t\tonScanInputLiveUpdate: function(event) {\n\t\t\t\n\t\t},\n\n\t\t/* =========================================================== */\n\t\t/* Internal functions\n\t\t/* =========================================================== */\n\t\t\n\t\t_loadGoogleBook: function(isbnCode) {\n\t\t\tvar oView = this.getView();\n\t\t\tvar oParams = {\n\t\t\t\tq: isbnCode\n\t\t\t};\n\t\t\tvar sUrl = \"/destinations/GoogleApi/books/v1/volumes\";\n\t\t\toView.setBusy(true);\n\t\t\t\n\t\t\tvar self = this;\n\t\t\t\n\t\t\t$.get(sUrl, oParams)\n\t\t\t\t.done(function(result) {\n\t\t\t\t\toView.setBusy(false);\n\t\t\t\t\tself._putGoogleBookDataToSimpleForm(result);\n\t\t\t\t})\n\t\t\t\t.fail(function(err) {\n\t\t\t\t\toView.setBusy(false);\n\t\t\t\t\tif (err !== undefined) {\n\t\t\t\t\t\tvar oErrorResponse = $.parseJSON(err.responseText);\n\t\t\t\t\t\tsap.m.MessageToast.show(oErrorResponse.message, {duration: 6000});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsap.m.MessageToast.show(\"Unknown error!\", {duration: 6000});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t},\n\t\t\n\t\t_putGoogleBookDataToSimpleForm: function(googleBook) {\n\t\t    if (googleBook.items === undefined) {\n                sap.m.MessageToast.show(\"Unknown ISBN code!\", {duration: 6000});\n                return;\n\t\t    }\n\t\t\tvar oAuthors = googleBook.items[0].volumeInfo.authors[0];\n\t\t\tvar oDescription = googleBook.items[0].volumeInfo.description !== undefined ? googleBook.items[0].volumeInfo.description : \"-\";\n\t\t\tvar oIsbn10;\n\t\t\tvar oIsbn13;\n\t\t\tif (googleBook.items[0].volumeInfo.industryIdentifiers[0].type === \"ISBN_10\") {\n\t\t\t\toIsbn10 = googleBook.items[0].volumeInfo.industryIdentifiers[0].identifier;\n\t\t\t}\n\t\t\tif (googleBook.items[0].volumeInfo.industryIdentifiers[1].type === \"ISBN_10\") {\n\t\t\t\toIsbn10 = googleBook.items[0].volumeInfo.industryIdentifiers[1].identifier;\n\t\t\t}\n\t\t\tif (googleBook.items[0].volumeInfo.industryIdentifiers[0].type === \"ISBN_13\") {\n\t\t\t\toIsbn13 = googleBook.items[0].volumeInfo.industryIdentifiers[0].identifier;\n\t\t\t}\n\t\t\tif (googleBook.items[0].volumeInfo.industryIdentifiers[1].type === \"ISBN_13\") {\n\t\t\t\toIsbn13 = googleBook.items[0].volumeInfo.industryIdentifiers[1].identifier;\n\t\t\t}\n\t\t\tvar oPageCount = googleBook.items[0].volumeInfo.pageCount !== undefined ? googleBook.items[0].volumeInfo.pageCount : \"-\";\n\t\t\tvar oPrintType = googleBook.items[0].volumeInfo.printType !== undefined ? googleBook.items[0].volumeInfo.printType : \"-\";\n\t\t\tvar oPublishedDate = googleBook.items[0].volumeInfo.publishedDate !== undefined ? googleBook.items[0].volumeInfo.publishedDate : \"-\";\n\t\t\tvar oPublisherString = googleBook.items[0].volumeInfo.publisher !== undefined ? googleBook.items[0].volumeInfo.publisher : \"-\";\n//\t\t\tvar oRatingAvg = googleBook.items[0].volumeInfo.averageRating !== undefined ? googleBook.items[0].volumeInfo.averageRating : 0;\n//\t\t\tvar oRatingBase = googleBook.items[0].volumeInfo.ratingsCount !== undefined ? googleBook.items[0].volumeInfo.ratingsCount : 0;\n            if (googleBook.items[0].volumeInfo.imageLinks !== undefined) {\n                var oSmallThumbnailUrl = googleBook.items[0].volumeInfo.imageLinks.smallThumbnail !== undefined ? googleBook.items[0].volumeInfo.imageLinks.smallThumbnail : \"\";\n                var oThumbnailUrl = googleBook.items[0].volumeInfo.imageLinks.thumbnail !== undefined ? googleBook.items[0].volumeInfo.imageLinks.thumbnail : \"\";\n            }\n\t\t\tvar oSubtitle = googleBook.items[0].volumeInfo.subtitle !== undefined ? googleBook.items[0].volumeInfo.subtitle : \"-\";\n\t\t\tvar oTitle = googleBook.items[0].volumeInfo.title !== undefined ? googleBook.items[0].volumeInfo.title : \"-\";\n\t\t\t\n\t\t\tthis.byId(\"AuthorsString_id\").setValue(oAuthors);\n\t\t\tthis.byId(\"Description_id\").setValue(oDescription);\n\t\t\tthis.byId(\"Isbn10_id\").setValue(oIsbn10);\n\t\t\tthis.byId(\"Isbn13_id\").setValue(oIsbn13);\n\t\t\tthis.byId(\"PageCount_id\").setValue(oPageCount);\n\t\t\tthis.byId(\"PrintType_id\").setValue(oPrintType);\n\t\t\tthis.byId(\"PublishedDate_id\").setValue(oPublishedDate);\n\t\t\tthis.byId(\"PublisherString_id\").setValue(oPublisherString);\n//\t\t\tthis.byId(\"RatingAvg_id\").setValue(oRatingAvg);\n//\t\t\tthis.byId(\"RatingBase_id\").setValue(oRatingBase);\n\t\t\tthis.byId(\"SmallThumbnailUrl_id\").setValue(oSmallThumbnailUrl);\n\t\t\tthis.byId(\"Subtitle_id\").setValue(oSubtitle);\n\t\t\tthis.byId(\"ThumbnailUrl_id\").setValue(oThumbnailUrl);\n\t\t\tthis.byId(\"Title_id\").setValue(oTitle);\n\t\t},\n\t\t\n\t\t_createBookFromGoogleBook: function(googleBook, location) {\n\t\t\tvar oAuthors = googleBook.items[0].volumeInfo.authors[0];\n\t\t\tvar oIsbn10 = googleBook.items[0].volumeInfo.industryIdentifiers[1].identifier;\n\t\t\tvar oIsbn13 = googleBook.items[0].volumeInfo.industryIdentifiers[0].identifier;\n\t\t\tvar oLocation;\n\t\t\tif (location) {\n\t\t\t\toLocation = location;\n\t\t\t} else {\n\t\t\t\toLocation = \"unknown\";\n\t\t\t}\n\t\t\tthis._oODataModel.createEntry((\"Books\", {\n\t\t\t\t\"AuthorsString\": oAuthors,\n\t\t\t\t\"Description\": googleBook.items[0].volumeInfo.description,\n\t\t\t\t\"Isbn10\": oIsbn10,\n\t\t\t\t\"Isbn13\": oIsbn13,\n\t\t\t\t\"LocationString\": oLocation,\n\t\t\t\t\"PageCount\": googleBook.items[0].volumeInfo.pageCount,\n\t\t\t\t\"PrintType\": googleBook.items[0].volumeInfo.printType,\n\t\t\t\t\"PublishedDate\": googleBook.items[0].volumeInfo.publishedDate,\n\t\t\t\t\"PublisherString\": googleBook.items[0].volumeInfo.publisher,\n\t\t\t\t\"Rating\": googleBook.items[0].volumeInfo.averageRating,\n\t\t\t\t\"RatingBase\": googleBook.items[0].volumeInfo.ratingsCount,\n\t\t\t\t\"SmallThumbnailUrl\": googleBook.items[0].volumeInfo.imageLinks.smallThumbnail,\n\t\t\t\t\"Subtitle\": googleBook.items[0].volumeInfo.subTitle,\n\t\t\t\t\"ThumbnailUrl\": googleBook.items[0].volumeInfo.imageLinks.thumbnail,\n\t\t\t\t\"Title\": googleBook.items[0].volumeInfo.title\n/*\n\t\t\t\t\"AuthorDetails\": [{\n\t\t\t\t\t\"Id\": 9776,\n\t\t\t\t\t\"Name\": \"Name 5\",\n\t\t\t\t\t\"Version\": \"/Date(1202482182000)/\",\n\t\t\t\t\t\"__metadata\": {\n\t\t\t\t\t\t\"uri\": \"Authors(9776)\",\n\t\t\t\t\t\t\"type\": \"BooksDB.Author\"\n\t\t\t\t\t}\n\t\t\t\t}],\n\t\t\t\t\"LocationDetails\": {\n\t\t\t\t\t\"__deferred\": {\n\t\t\t\t\t\t\"uri\": \"Books(7461)/LocationDetails\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"PublisherDetails\": {\n\t\t\t\t\t\"__deferred\": {\n\t\t\t\t\t\t\"uri\": \"Books(7461)/PublisherDetails\"\n\t\t\t\t\t}\n\t\t\t\t}\n*/\t\t\t\t\n\t\t\t}));\n\t\t\tthis._oODataModel.submitChanges();\n\t\t},\n\n\t\t/**\n\t\t * Navigates back in the browser history, if the entry was created by this app.\n\t\t * If not, it navigates to the Details page\n\t\t * @private\n\t\t */\n\t\t_navBack: function() {\n\t\t\tvar oHistory = sap.ui.core.routing.History.getInstance(),\n\t\t\t\tsPreviousHash = oHistory.getPreviousHash();\n\n\t\t\tthis.getView().unbindObject();\n\t\t\tif (sPreviousHash !== undefined) {\n\t\t\t\t// The history contains a previous entry\n\t\t\t\thistory.go(-1);\n\t\t\t} else {\n\t\t\t\tthis.getRouter().getTargets().display(\"object\");\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Opens a dialog letting the user either confirm or cancel the quit and discard of changes.\n\t\t * @private\n\t\t */\n\t\t_showConfirmQuitChanges: function() {\n\t\t\tvar oComponent = this.getOwnerComponent(),\n\t\t\t\toModel = this.getModel();\n\t\t\tvar that = this;\n\t\t\tMessageBox.confirm(\n\t\t\t\tthis._oResourceBundle.getText(\"confirmCancelMessage\"), {\n\t\t\t\t\tstyleClass: oComponent.getContentDensityClass(),\n\t\t\t\t\tonClose: function(oAction) {\n\t\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.OK) {\n\t\t\t\t\t\t\tthat.getModel(\"appView\").setProperty(\"/addEnabled\", true);\n\t\t\t\t\t\t\toModel.resetChanges();\n\t\t\t\t\t\t\tthat._navBack();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\n\t\t/**\n\t\t * Prepares the view for editing the selected object\n\t\t * @param {sap.ui.base.Event} oEvent the  display event\n\t\t * @private\n\t\t */\n\t\t_onEdit: function(oEvent) {\n\t\t\tvar oData = oEvent.getParameter(\"data\"),\n\t\t\t\toView = this.getView();\n\t\t\tthis._oViewModel.setProperty(\"/mode\", \"edit\");\n\t\t\tthis._oViewModel.setProperty(\"/enableCreate\", true);\n\t\t\tthis._oViewModel.setProperty(\"/viewTitle\", this._oResourceBundle.getText(\"editViewTitle\"));\n\n\t\t\toView.bindElement({\n\t\t\t\tpath: oData.objectPath\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Prepares the view for creating new object\n\t\t * @param {sap.ui.base.Event} oEvent the  display event\n\t\t * @private\n\t\t */\n\n\t\t_onCreate: function(oEvent) {\n\t\t\tif (oEvent.getParameter(\"name\") && oEvent.getParameter(\"name\") !== \"create\") {\n\t\t\t\tthis._oViewModel.setProperty(\"/enableCreate\", false);\n\t\t\t\tthis.getRouter().getTargets().detachDisplay(null, this._onDisplay, this);\n\t\t\t\tthis.getView().unbindObject();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._oViewModel.setProperty(\"/viewTitle\", this._oResourceBundle.getText(\"createViewTitle\"));\n\t\t\tthis._oViewModel.setProperty(\"/mode\", \"create\");\n\t\t\tvar oContext = this._oODataModel.createEntry(\"Books\", {\n\t\t\t\tsuccess: this._fnEntityCreated.bind(this),\n\t\t\t\terror: this._fnEntityCreationFailed.bind(this)\n\t\t\t});\n\t\t\tthis.getView().setBindingContext(oContext);\n\t\t},\n\n\t\t/**\n\t\t * Checks if the save button can be enabled\n\t\t * @private\n\t\t */\n\t\t_validateSaveEnablement: function() {\n\t\t\tvar aInputControls = this._getFormFields(this.setValue(\"newEntitySimpleForm\"));\n\t\t\tvar oControl;\n\t\t\tfor (var m = 0; m < aInputControls.length; m++) {\n\t\t\t\toControl = aInputControls[m].control;\n\t\t\t\tif (aInputControls[m].required) {\n\t\t\t\t\tvar sValue = oControl.getValue();\n\t\t\t\t\tif (!sValue) {\n\t\t\t\t\t\tthis._oViewModel.setProperty(\"/enableCreate\", false);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._checkForErrorMessages();\n\t\t},\n\n\t\t/**\n\t\t * Checks if there is any wrong inputs that can not be saved.\n\t\t * @private\n\t\t */\n\n\t\t_checkForErrorMessages: function() {\n\t\t\tvar aMessages = this._oBinding.oModel.oData;\n\t\t\tif (aMessages.length > 0) {\n\t\t\t\tvar bEnableCreate = true;\n\t\t\t\tfor (var i = 0; i < aMessages.length; i++) {\n\t\t\t\t\tif (aMessages[i].type === \"Error\" && !aMessages[i].technical) {\n\t\t\t\t\t\tbEnableCreate = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._oViewModel.setProperty(\"/enableCreate\", bEnableCreate);\n\t\t\t} else {\n\t\t\t\tthis._oViewModel.setProperty(\"/enableCreate\", true);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Handles the success of updating an object\n\t\t * @private\n\t\t */\n\t\t_fnUpdateSuccess: function() {\n\t\t\tthis.getModel(\"appView\").setProperty(\"/busy\", false);\n\t\t\tthis.getView().unbindObject();\n\t\t\tthis.getRouter().getTargets().display(\"object\");\n\t\t},\n\n\t\t/**\n\t\t * Handles the success of creating an object\n\t\t *@param {object} oData the response of the save action\n\t\t * @private\n\t\t */\n\t\t_fnEntityCreated: function(oData) {\n\t\t\tvar sObjectPath = this.getModel().createKey(\"Books\", oData);\n\t\t\tthis.getModel(\"appView\").setProperty(\"/itemToSelect\", \"/\" + sObjectPath); //save last created\n\t\t\tthis.getModel(\"appView\").setProperty(\"/busy\", false);\n\t\t\tthis.getRouter().getTargets().display(\"object\");\n\t\t},\n\n\t\t/**\n\t\t * Handles the failure of creating/updating an object\n\t\t * @private\n\t\t */\n\t\t_fnEntityCreationFailed: function() {\n\t\t\tthis.getModel(\"appView\").setProperty(\"/busy\", false);\n\t\t},\n\n\t\t/**\n\t\t * Handles the onDisplay event which is triggered when this view is displayed\n\t\t * @param {sap.ui.base.Event} oEvent the on display event\n\t\t * @private\n\t\t */\n\t\t_onDisplay: function(oEvent) {\n\t\t\tvar oData = oEvent.getParameter(\"data\");\n\t\t\tif (oData && oData.mode === \"update\") {\n\t\t\t\tthis._onEdit(oEvent);\n\t\t\t} else {\n\t\t\t\tthis._onCreate(oEvent);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Gets the form fields\n\t\t * @param {sap.ui.layout.form} oSimpleForm the form in the view.\n\t\t * @private\n\t\t */\n\t\t_getFormFields: function(oSimpleForm) {\n\t\t\tvar aControls = [];\n\t\t\tvar aFormContent = oSimpleForm.getContent();\n\t\t\tvar sControlType;\n\t\t\tfor (var i = 0; i < aFormContent.length; i++) {\n\t\t\t\tsControlType = aFormContent[i].getMetadata().getName();\n\t\t\t\tif (sControlType === \"sap.m.Input\" || sControlType === \"sap.m.DateTimeInput\" ||\n\t\t\t\t\tsControlType === \"sap.m.CheckBox\") {\n\t\t\t\t\taControls.push({\n\t\t\t\t\t\tcontrol: aFormContent[i],\n\t\t\t\t\t\trequired: aFormContent[i - 1].getRequired && aFormContent[i - 1].getRequired()\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn aControls;\n\t\t}\n\t});\n\n});",
		"de/asr/library/booksdbapp/controller/ListSelector.js": "sap.ui.define([\r\n\t\"sap/ui/base/Object\",\r\n\t\"sap/m/GroupHeaderListItem\"\r\n], function(BaseObject, GroupHeaderListItem) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseObject.extend(\"de.asr.library.booksdbapp.model.ListSelector\", {\r\n\r\n\t\t/**\r\n\t\t * Provides a convenience API for selecting list items. All the functions will wait until the initial load of the a List passed to the instance by the setBoundMasterList\r\n\t\t * function.\r\n\t\t * @class\r\n\t\t * @public\r\n\t\t * @alias de.asr.library.booksdbapp.model.ListSelector\r\n\t\t */\r\n\r\n\t\tconstructor: function() {\r\n\t\t\tthis._oWhenListHasBeenSet = new Promise(function(fnResolveListHasBeenSet) {\r\n\t\t\t\tthis._fnResolveListHasBeenSet = fnResolveListHasBeenSet;\r\n\t\t\t}.bind(this));\r\n\t\t\t// This promise needs to be created in the constructor, since it is allowed to\r\n\t\t\t// invoke selectItem functions before calling setBoundMasterList\r\n\t\t\tthis.oWhenListLoadingIsDone = new Promise(function(fnResolve, fnReject) {\r\n\t\t\t\t// Used to wait until the setBound masterList function is invoked\r\n\t\t\t\tthis._oWhenListHasBeenSet\r\n\t\t\t\t\t.then(function(oList) {\r\n\t\t\t\t\t\toList.getBinding(\"items\").attachEventOnce(\"dataReceived\",\r\n\t\t\t\t\t\t\tfunction(oData) {\r\n\t\t\t\t\t\t\t\tif (!oData.getParameter(\"data\")) {\r\n\t\t\t\t\t\t\t\t\tfnReject({\r\n\t\t\t\t\t\t\t\t\t\tlist: oList,\r\n\t\t\t\t\t\t\t\t\t\terror: true\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tvar oFirstListItem = oList.getItems()[0];\r\n\t\t\t\t\t\t\t\tif (oFirstListItem) {\r\n\t\t\t\t\t\t\t\t\t// Have to make sure that first list Item is selected\r\n\t\t\t\t\t\t\t\t\t// and a select event is triggered. Like that, the corresponding\r\n\t\t\t\t\t\t\t\t\t// detail page is loaded automatically\r\n\t\t\t\t\t\t\t\t\tfnResolve({\r\n\t\t\t\t\t\t\t\t\t\tlist: oList,\r\n\t\t\t\t\t\t\t\t\t\tfirstListitem: oFirstListItem\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t// No items in the list\r\n\t\t\t\t\t\t\t\t\tfnReject({\r\n\t\t\t\t\t\t\t\t\t\tlist: oList,\r\n\t\t\t\t\t\t\t\t\t\terror: false\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t});\r\n\t\t\t}.bind(this));\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * A bound list should be passed in here. Should be done, before the list has received its initial data from the server.\r\n\t\t * May only be invoked once per ListSelector instance.\r\n\t\t * @param {sap.m.List} oList The list all the select functions will be invoked on.\r\n\t\t * @public\r\n\t\t */\r\n\t\tsetBoundMasterList: function(oList) {\r\n\t\t\tthis._oList = oList;\r\n\t\t\tthis._fnResolveListHasBeenSet(oList);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Tries to select and scroll to a list item with a matching binding context. If there are no items matching the binding context or the ListMode is none,\r\n\t\t * no selection/scrolling will happen\r\n\t\t * @param {string} sBindingPath the binding path matching the binding path of a list item\r\n\t\t * @public\r\n\t\t */\r\n\t\tselectAListItem: function(sBindingPath) {\r\n\r\n\t\t\tthis.oWhenListLoadingIsDone.then(\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\tvar oList = this._oList,\r\n\t\t\t\t\t\toSelectedItem;\r\n\r\n\t\t\t\t\tif (oList.getMode() === \"None\") {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\toSelectedItem = oList.getSelectedItem();\r\n\r\n\t\t\t\t\t// skip update if the current selection is already matching the object path\r\n\t\t\t\t\tif (oSelectedItem && oSelectedItem.getBindingContext().getPath() === sBindingPath) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\toList.getItems().some(function(oItem) {\r\n\t\t\t\t\t\tif (oItem.getBindingContext() && oItem.getBindingContext().getPath() === sBindingPath) {\r\n\t\t\t\t\t\t\toList.setSelectedItem(oItem);\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}.bind(this),\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\tjQuery.sap.log.warning(\"Could not select the list item with the path\" + sBindingPath +\r\n\t\t\t\t\t\t\" because the list encountered an error or had no items\");\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* Convenience Functions for List Selection Change Event       */\r\n\t\t/* =========================================================== */\r\n\r\n\t\t/**\r\n\t\t * Attaches a listener and listener function to the ListSelector's bound master list. By using\r\n\t\t * a promise, the listener is added, even if the list is not available when 'attachListSelectionChange'\r\n\t\t * is called.\r\n\t\t * @param {function} fnFunction the function to be executed when the list fires a selection change event\r\n\t\t * @param {function} oListener the listener object\r\n\t\t * @return {de.asr.library.booksdbapp.model.ListSelector} the list selector object for method chaining\r\n\t\t * @public\r\n\t\t */\r\n\t\tattachListSelectionChange: function(fnFunction, oListener) {\r\n\t\t\tthis._oWhenListHasBeenSet.then(function() {\r\n\t\t\t\tthis._oList.attachSelectionChange(fnFunction, oListener);\r\n\t\t\t}.bind(this));\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Detaches a listener and listener function from the ListSelector's bound master list. By using\r\n\t\t * a promise, the listener is removed, even if the list is not available when 'detachListSelectionChange'\r\n\t\t * is called.\r\n\t\t * @param {function} fnFunction the function to be executed when the list fires a selection change event\r\n\t\t * @param {function} oListener the listener object\r\n\t\t * @return {de.asr.library.booksdbapp.model.ListSelector} the list selector object for method chaining\r\n\t\t * @public\r\n\t\t */\r\n\t\tdetachListSelectionChange: function(fnFunction, oListener) {\r\n\t\t\tthis._oWhenListHasBeenSet.then(function() {\r\n\t\t\t\tthis._oList.detachSelectionChange(fnFunction, oListener);\r\n\t\t\t}.bind(this));\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Removes all selections from master list.\r\n\t\t * Does not trigger 'selectionChange' event on master list, though.\r\n\t\t * @public\r\n\t\t */\r\n\t\tclearMasterListSelection: function() {\r\n\t\t\t//use promise to make sure that 'this._oList' is available\r\n\t\t\tthis._oWhenListHasBeenSet.then(function() {\r\n\t\t\t\tthis._oList.removeSelections(true);\r\n\t\t\t}.bind(this));\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Find the next valid list item from the master list after the current.\r\n\t\t * @return {sap.m.ListItem} the list selector object for method chaining\r\n\t\t * @public\r\n\t\t */\r\n\t\tfindNextItem: function(sCurrentPath) {\r\n\t\t\tvar aItems = this._oList.getItems();\r\n\t\t\tvar iItemsCount = aItems.length;\r\n\t\t\tif (iItemsCount === 1) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tif (iItemsCount > 0) {\r\n\t\t\t\tvar bFound = false;\r\n\t\t\t\tfor (var i = 0; i < iItemsCount; i++) {\r\n\t\t\t\t\tvar oItem = aItems[i];\r\n\t\t\t\t\tif (!(oItem instanceof GroupHeaderListItem)) {\r\n\t\t\t\t\t\tvar oCtx = oItem.getBindingContext(),\r\n\t\t\t\t\t\t\tsPath = oCtx.getPath();\r\n\t\t\t\t\t\tbFound = sPath === sCurrentPath;\r\n\t\t\t\t\t\tif (bFound) {\r\n\t\t\t\t\t\t\tif (i === iItemsCount - 1) { //the current item is the last but not the only one\r\n\t\t\t\t\t\t\t\treturn aItems[0];\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn aItems[i + 1];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (!bFound) {\r\n\t\t\t\t\treturn null; //not valid\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * Find the list item from a path.\r\n\t\t * @return {sap.m.ListItem} the list selector object for method chaining\r\n\t\t * @public\r\n\t\t */\r\n\t\tfindListItem: function(sPath) {\r\n\t\t\tvar aItems = this._oList.getItems();\r\n\t\t\tfor (var i = 0; i < aItems.length; i++) {\r\n\t\t\t\tvar oItem = aItems[i];\r\n\t\t\t\tif (!(oItem instanceof GroupHeaderListItem)) {\r\n\t\t\t\t\tvar oCtx = oItem.getBindingContext();\r\n\t\t\t\t\tvar bFound = sPath === oCtx.getPath();\r\n\t\t\t\t\tif (bFound) {\r\n\t\t\t\t\t\treturn oItem;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn null; //not found\r\n\t\t},\r\n\t\t/**\r\n\t\t * Find the first list item\r\n\t\t * @return {sap.m.ListItem} the list selector object for method chaining\r\n\t\t * @public\r\n\t\t */\r\n\t\tfindFirstItem: function() {\r\n\t\t\tvar aItems = this._oList.getItems();\r\n\t\t\tif (aItems && aItems.length > 0) {\r\n\t\t\t\treturn aItems[0];\r\n\t\t\t}\r\n\t\t\treturn null; //not found\r\n\t\t}\r\n\t});\r\n\r\n});",
		"de/asr/library/booksdbapp/model/formatter.js": "sap.ui.define([], function() {\r\n\t\"use strict\";\r\n\r\n\treturn {\r\n\t\t/**\r\n\t\t * Rounds the currency value to 2 digits\r\n\t\t *\r\n\t\t * @public\r\n\t\t * @param {string} sValue value to be formatted\r\n\t\t * @returns {string} formatted currency value with 2 digits\r\n\t\t */\r\n\t\tcurrencyValue: function(sValue) {\r\n\t\t\tif (!sValue) {\r\n\t\t\t\treturn \"\";\r\n\t\t\t}\r\n\r\n\t\t\treturn parseFloat(sValue).toFixed(2);\r\n\t\t}\r\n\t};\r\n\r\n});",
		"de/asr/library/booksdbapp/localService/mockserver.js": "sap.ui.define([\r\n\t\"sap/ui/core/util/MockServer\"\r\n], function(MockServer) {\r\n\t\"use strict\";\r\n\r\n\tvar oMockServer,\r\n\t\t_sAppModulePath = \"de/asr/library/booksdbapp/\",\r\n\t\t_sJsonFilesModulePath = _sAppModulePath + \"localService/mockdata\";\r\n\r\n\treturn {\r\n\t\t/**\r\n\t\t * Initializes the mock server.\r\n\t\t * You can configure the delay with the URL parameter \"serverDelay\".\r\n\t\t * The local mock data in this folder is returned instead of the real data for testing.\r\n\t\t * @public\r\n\t\t */\r\n\r\n\t\tinit: function() {\r\n\t\t\tvar oUriParameters = jQuery.sap.getUriParameters(),\r\n\t\t\t\tsJsonFilesUrl = jQuery.sap.getModulePath(_sJsonFilesModulePath),\r\n\t\t\t\tsManifestUrl = jQuery.sap.getModulePath(_sAppModulePath + \"manifest\", \".json\"),\r\n\t\t\t\tsEntity = \"Books\",\r\n\t\t\t\tsErrorParam = oUriParameters.get(\"errorType\"),\r\n\t\t\t\tiErrorCode = sErrorParam === \"badRequest\" ? 400 : 500,\r\n\t\t\t\toManifest = jQuery.sap.syncGetJSON(sManifestUrl).data,\r\n\t\t\t\toMainDataSource = oManifest[\"sap.app\"].dataSources.mainService,\r\n\t\t\t\tsMetadataUrl = jQuery.sap.getModulePath(_sAppModulePath + oMainDataSource.settings.localUri.replace(\".xml\", \"\"), \".xml\"),\r\n\t\t\t\t// ensure there is a trailing slash\r\n\t\t\t\tsMockServerUrl = /.*\\/$/.test(oMainDataSource.uri) ? oMainDataSource.uri : oMainDataSource.uri + \"/\";\r\n\r\n\t\t\toMockServer = new MockServer({\r\n\t\t\t\trootUri: sMockServerUrl\r\n\t\t\t});\r\n\r\n\t\t\t// configure mock server with a delay of 1s\r\n\t\t\tMockServer.config({\r\n\t\t\t\tautoRespond: true,\r\n\t\t\t\tautoRespondAfter: (oUriParameters.get(\"serverDelay\") || 1000)\r\n\t\t\t});\r\n\r\n\t\t\toMockServer.simulate(sMetadataUrl, {\r\n\t\t\t\tsMockdataBaseUrl: sJsonFilesUrl,\r\n\t\t\t\tbGenerateMissingMockData: true\r\n\t\t\t});\r\n\r\n\t\t\tvar aRequests = oMockServer.getRequests(),\r\n\t\t\t\tfnResponse = function(iErrCode, sMessage, aRequest) {\r\n\t\t\t\t\taRequest.response = function(oXhr) {\r\n\t\t\t\t\t\toXhr.respond(iErrCode, {\r\n\t\t\t\t\t\t\t\"Content-Type\": \"text/plain;charset=utf-8\"\r\n\t\t\t\t\t\t}, sMessage);\r\n\t\t\t\t\t};\r\n\t\t\t\t};\r\n\r\n\t\t\t// handling the metadata error test\r\n\t\t\tif (oUriParameters.get(\"metadataError\")) {\r\n\t\t\t\taRequests.forEach(function(aEntry) {\r\n\t\t\t\t\tif (aEntry.path.toString().indexOf(\"$metadata\") > -1) {\r\n\t\t\t\t\t\tfnResponse(500, \"metadata Error\", aEntry);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Handling request errors\r\n\t\t\tif (sErrorParam) {\r\n\t\t\t\taRequests.forEach(function(aEntry) {\r\n\t\t\t\t\tif (aEntry.path.toString().indexOf(sEntity) > -1) {\r\n\t\t\t\t\t\tfnResponse(iErrorCode, sErrorParam, aEntry);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\toMockServer.start();\r\n\r\n\t\t\tjQuery.sap.log.info(\"Running the app with mock data\");\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * @public returns the mockserver of the app, should be used in integration tests\r\n\t\t * @returns {sap.ui.core.util.MockServer} the mockserver instance\r\n\t\t */\r\n\t\tgetMockServer: function() {\r\n\t\t\treturn oMockServer;\r\n\t\t}\r\n\t};\r\n\r\n});",
		"de/asr/library/booksdbapp/controller/ErrorHandler.js": "sap.ui.define([\r\n\t\"sap/ui/base/Object\",\r\n\t\"sap/m/MessageBox\"\r\n], function(UI5Object, MessageBox) {\r\n\t\"use strict\";\r\n\r\n\treturn UI5Object.extend(\"de.asr.library.booksdbapp.controller.ErrorHandler\", {\r\n\r\n\t\t/**\r\n\t\t * Handles application errors by automatically attaching to the model events and displaying errors when needed.\r\n\t\t * @class\r\n\t\t * @param {sap.ui.core.UIComponent} oComponent reference to the app's component\r\n\t\t * @public\r\n\t\t * @alias de.asr.library.booksdbapp.controller.ErrorHandler\r\n\t\t */\r\n\t\tconstructor: function(oComponent) {\r\n\t\t\tthis._oResourceBundle = oComponent.getModel(\"i18n\").getResourceBundle();\r\n\t\t\tthis._oComponent = oComponent;\r\n\t\t\tthis._oModel = oComponent.getModel();\r\n\t\t\tthis._bMessageOpen = false;\r\n\t\t\tthis._sErrorText = this._oResourceBundle.getText(\"errorText\");\r\n\r\n\t\t\tthis._oModel.attachMetadataFailed(function(oEvent) {\r\n\t\t\t\tvar oParams = oEvent.getParameters();\r\n\r\n\t\t\t\tthis._showMetadataError(oParams.response);\r\n\t\t\t}, this);\r\n\r\n\t\t\tthis._oModel.attachRequestFailed(this.onRequestFailed, this);\r\n\t\t},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* event handlers                                              */\r\n\t\t/* =========================================================== */\r\n\r\n\t\t/**\r\n\t\t * Event Handler for Request Fail event\r\n\t\t * The user can try to refresh the metadata.\r\n\t\t * @param {object} oEvent an event containing the response data\r\n\t\t * @private\r\n\t\t */\r\n\t\tonRequestFailed: function(oEvent) {\r\n\t\t\tvar oParams = oEvent.getParameters();\r\n\r\n\t\t\t// An entity that was not found in the service is also throwing a 404 error in oData.\r\n\t\t\t// We already cover this case with a notFound target so we skip it here.\r\n\t\t\t// A request that cannot be sent to the server is a technical error that we have to handle though\r\n\t\t\tif ((oParams.response.statusCode !== \"404\") || (oParams.response.statusCode === 404 &&\r\n\t\t\t\t\toParams.response.responseText.indexOf(\"Cannot POST\") === 0)) {\r\n\t\t\t\tthis._showServiceError(oParams.response);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Shows a {@link sap.m.MessageBox} when the metadata call has failed.\r\n\t\t * The user can try to refresh the metadata.\r\n\t\t * @param {string} sDetails a technical error to be displayed on request\r\n\t\t * @private\r\n\t\t */\r\n\t\t_showMetadataError: function(sDetails) {\r\n\t\t\tMessageBox.error(\r\n\t\t\t\tthis._sErrorText, {\r\n\t\t\t\t\tid: \"metadataErrorMessageBox\",\r\n\t\t\t\t\tdetails: sDetails,\r\n\t\t\t\t\tstyleClass: this._oComponent.getContentDensityClass(),\r\n\t\t\t\t\tactions: [MessageBox.Action.RETRY, MessageBox.Action.CLOSE],\r\n\t\t\t\t\tonClose: function(sAction) {\r\n\t\t\t\t\t\tif (sAction === MessageBox.Action.RETRY) {\r\n\t\t\t\t\t\t\tthis._oModel.refreshMetadata();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}.bind(this)\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Shows a {@link sap.m.MessageBox}.\r\n\t\t * The user can try to refresh the metadata.\r\n\t\t * @param {string} sTitle the MessageBox title, {string} sMessageHeader and {string} sDetails a technical error to be displayed on request\r\n\t\t * @private\r\n\t\t */\r\n\t\t_showErrorMsg: function(sTitle, sMessageHeader, sDetails) {\r\n\r\n\t\t\tMessageBox.error(\r\n\t\t\t\tsMessageHeader, {\r\n\t\t\t\t\tid: \"ErrorMessageBox\",\r\n\t\t\t\t\ttitle: sTitle,\r\n\t\t\t\t\tdetails: sDetails,\r\n\t\t\t\t\ticon: MessageBox.Icon.ERROR,\r\n\t\t\t\t\tstyleClass: this._oComponent.getContentDensityClass(),\r\n\t\t\t\t\tactions: MessageBox.Action.CLOSE\r\n\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Shows a {@link sap.m.MessageBox} when a service call has failed.\r\n\t\t * Only the first error message will be display.\r\n\t\t * @param {string} sDetails a technical error to be displayed on request\r\n\t\t * @private\r\n\t\t */\r\n\t\t_showServiceError: function(sDetails) {\r\n\t\t\tif (this._bMessageOpen) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis._bMessageOpen = true;\r\n\t\t\tMessageBox.error(\r\n\t\t\t\tthis._sErrorText, {\r\n\t\t\t\t\tid: \"serviceErrorMessageBox\",\r\n\t\t\t\t\tdetails: sDetails.responseText,\r\n\t\t\t\t\tstyleClass: this._oComponent.getContentDensityClass(),\r\n\t\t\t\t\tactions: [MessageBox.Action.CLOSE],\r\n\t\t\t\t\tonClose: function() {\r\n\t\t\t\t\t\tthis._bMessageOpen = false;\r\n\t\t\t\t\t}.bind(this)\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\t});\r\n\r\n});",
		"de/asr/library/booksdbapp/controller/Master.controller.js": "/*global history */\nsap.ui.define([\n\t\"de/asr/library/booksdbapp/controller/BaseController\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/ui/model/Filter\",\n\t\"sap/ui/model/FilterOperator\",\n\t\"sap/m/GroupHeaderListItem\",\n\t\"sap/ui/Device\",\n\t\"de/asr/library/booksdbapp/model/formatter\",\n\t\"sap/m/MessageBox\",\n\t\"de/asr/library/booksdbapp/model/grouper\",\n\t\"de/asr/library/booksdbapp/model/GroupSortState\"\n], function(BaseController, JSONModel, Filter, FilterOperator, GroupHeaderListItem, Device, formatter, MessageBox, grouper, GroupSortState) {\n\t\"use strict\";\n\n\treturn BaseController.extend(\"de.asr.library.booksdbapp.controller.Master\", {\n\n\t\tformatter: formatter,\n\n\t\t/* =========================================================== */\n\t\t/* lifecycle methods                                           */\n\t\t/* =========================================================== */\n\n\t\t/**\n\t\t * Called when the master list controller is instantiated. It sets up the event handling for the master/detail communication and other lifecycle tasks.\n\t\t * @public\n\t\t */\n\t\tonInit: function() {\n\t\t\t// Control state model\n\t\t\tvar oList = this.byId(\"list\"),\n\t\t\t\toViewModel = this._createViewModel(),\n\t\t\t\t// Put down master list's original value for busy indicator delay,\n\t\t\t\t// so it can be restored later on. Busy handling on the master list is\n\t\t\t\t// taken care of by the master list itself.\n\t\t\t\tiOriginalBusyDelay = oList.getBusyIndicatorDelay();\n\t\t\tthis._oListSelector = this.getOwnerComponent().oListSelector;\n\t\t\tthis._oGroupSortState = new GroupSortState(oViewModel, grouper.Rating(this.getResourceBundle()));\n\n\t\t\tthis._oList = oList;\n\t\t\t// keeps the filter and search state\n\t\t\tthis._oListFilterState = {\n\t\t\t\taFilter: [],\n\t\t\t\taSearch: []\n\t\t\t};\n\n\t\t\tthis.setModel(oViewModel, \"masterView\");\n\t\t\t// Make sure, busy indication is showing immediately so there is no\n\t\t\t// break after the busy indication for loading the view's meta data is\n\t\t\t// ended (see promise 'oWhenMetadataIsLoaded' in AppController)\n\t\t\toList.attachEventOnce(\"updateFinished\", function() {\n\t\t\t\t// Restore original busy indicator delay for the list\n\t\t\t\toViewModel.setProperty(\"/delay\", iOriginalBusyDelay);\n\t\t\t});\n\n\t\t\tthis.getView().addEventDelegate({\n\t\t\t\tonBeforeFirstShow: function() {\n\t\t\t\t\tthis._oListSelector.setBoundMasterList(oList);\n\t\t\t\t}.bind(this)\n\t\t\t});\n\n\t\t\tthis.getRouter().getRoute(\"master\").attachPatternMatched(this._onMasterMatched, this);\n\t\t\tthis.getRouter().attachBypassed(this.onBypassed, this);\n\t\t\tthis._oODataModel = this.getOwnerComponent().getModel();\n\t\t},\n\n\t\t/* =========================================================== */\n\t\t/* event handlers                                              */\n\t\t/* =========================================================== */\n\n\t\t/**\n\t\t * After list data is available, this handler method updates the\n\t\t * master list counter and hides the pull to refresh control, if\n\t\t * necessary.\n\t\t * @param {sap.ui.base.Event} oEvent the update finished event\n\t\t * @public\n\t\t */\n\t\tonUpdateFinished: function(oEvent) {\n\t\t\t// update the master list object counter after new data is loaded\n\t\t\tthis._updateListItemCount(oEvent.getParameter(\"total\"));\n\t\t\t// hide pull to refresh if necessary\n\t\t\tthis.byId(\"pullToRefresh\").hide();\n\t\t\tthis._findItem();\n\t\t\tthis.getModel(\"appView\").setProperty(\"/addEnabled\", true);\n\t\t},\n\n\t\t/**\n\t\t * Event handler for the master search field. Applies current\n\t\t * filter value and triggers a new search. If the search field's\n\t\t * 'refresh' button has been pressed, no new search is triggered\n\t\t * and the list binding is refresh instead.\n\t\t * @param {sap.ui.base.Event} oEvent the search event\n\t\t * @public\n\t\t */\n\t\tonSearch: function(oEvent) {\n\t\t\tif (oEvent.getParameters().refreshButtonPressed) {\n\t\t\t\t// Search field's 'refresh' button has been pressed.\n\t\t\t\t// This is visible if you select any master list item.\n\t\t\t\t// In this case no new search is triggered, we only\n\t\t\t\t// refresh the list binding.\n\t\t\t\tthis.onRefresh();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar sQuery = oEvent.getParameter(\"query\");\n\n\t\t\tif (sQuery) {\n\t\t\t\tthis._oListFilterState.aSearch = [new Filter(\"Title\", FilterOperator.Contains, sQuery)];\n\t\t\t} else {\n\t\t\t\tthis._oListFilterState.aSearch = [];\n\t\t\t}\n\t\t\tthis._applyFilterSearch();\n\n\t\t},\n\n\t\t/**\n\t\t * Event handler for refresh event. Keeps filter, sort\n\t\t * and group settings and refreshes the list binding.\n\t\t * @public\n\t\t */\n\t\tonRefresh: function() {\n\t\t\tthis._oList.getBinding(\"items\").refresh();\n\t\t},\n\n\t\t/**\n\t\t * Event handler for the sorter selection.\n\t\t * @param {sap.ui.base.Event} oEvent the select event\n\t\t * @public\n\t\t */\n\t\tonSort: function(oEvent) {\n\t\t\tvar sKey = oEvent.getSource().getSelectedItem().getKey(),\n\t\t\t\taSorters = this._oGroupSortState.sort(sKey);\n\n\t\t\tthis._applyGroupSort(aSorters);\n\t\t},\n\n\t\t/**\n\t\t * Event handler for the grouper selection.\n\t\t * @param {sap.ui.base.Event} oEvent the search field event\n\t\t * @public\n\t\t */\n\t\tonGroup: function(oEvent) {\n\t\t\tvar sKey = oEvent.getSource().getSelectedItem().getKey(),\n\t\t\t\taSorters = this._oGroupSortState.group(sKey);\n\n\t\t\tthis._applyGroupSort(aSorters);\n\t\t},\n\n\t\t/**\n\t\t * Event handler for the filter button to open the ViewSettingsDialog.\n\t\t * which is used to add or remove filters to the master list. This\n\t\t * handler method is also called when the filter bar is pressed,\n\t\t * which is added to the beginning of the master list when a filter is applied.\n\t\t * @public\n\t\t */\n\t\tonOpenViewSettings: function() {\n\t\t\tif (!this._oViewSettingsDialog) {\n\t\t\t\tthis._oViewSettingsDialog = sap.ui.xmlfragment(\"de.asr.library.booksdbapp.view.ViewSettingsDialog\", this);\n\t\t\t\tthis.getView().addDependent(this._oViewSettingsDialog);\n\t\t\t\t// forward compact/cozy style into Dialog\n\t\t\t\tthis._oViewSettingsDialog.addStyleClass(this.getOwnerComponent().getContentDensityClass());\n\t\t\t}\n\t\t\tthis._oViewSettingsDialog.open();\n\t\t},\n\n\t\t/**\n\t\t * Event handler called when ViewSettingsDialog has been confirmed, i.e.\n\t\t * has been closed with 'OK'. In the case, the currently chosen filters\n\t\t * are applied to the master list, which can also mean that the currently\n\t\t * applied filters are removed from the master list, in case the filter\n\t\t * settings are removed in the ViewSettingsDialog.\n\t\t * @param {sap.ui.base.Event} oEvent the confirm event\n\t\t * @public\n\t\t */\n\t\tonConfirmViewSettingsDialog: function(oEvent) {\n\t\t\tvar aFilterItems = oEvent.getParameters().filterItems,\n\t\t\t\taFilters = [],\n\t\t\t\taCaptions = [];\n\n\t\t\t// update filter state:\n\t\t\t// combine the filter array and the filter string\n\t\t\taFilterItems.forEach(function(oItem) {\n\t\t\t\tswitch (oItem.getKey()) {\n\t\t\t\t\tcase \"Filter1\":\n\t\t\t\t\t\taFilters.push(new Filter(\"Rating\", FilterOperator.LE, 100));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Filter2\":\n\t\t\t\t\t\taFilters.push(new Filter(\"Rating\", FilterOperator.GT, 100));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\taCaptions.push(oItem.getText());\n\t\t\t});\n\n\t\t\tthis._oListFilterState.aFilter = aFilters;\n\t\t\tthis._updateFilterBar(aCaptions.join(\", \"));\n\t\t\tthis._applyFilterSearch();\n\t\t},\n\n\t\t/**\n\t\t * Event handler for the list selection event\n\t\t * @param {sap.ui.base.Event} oEvent the list selectionChange event\n\t\t * @public\n\t\t */\n\t\tonSelectionChange: function(oEvent) {\n\t\t\tvar that = this;\n\t\t\tvar oItem = oEvent.getParameter(\"listItem\") || oEvent.getSource();\n\t\t\tvar fnLeave = function() {\n\t\t\t\tthat._oODataModel.resetChanges();\n\t\t\t\tthat._showDetail(oItem);\n\t\t\t};\n\t\t\tif (this._oODataModel.hasPendingChanges()) {\n\t\t\t\tthis._leaveEditPage(fnLeave);\n\t\t\t} else {\n\t\t\t\tthis._showDetail(oItem);\n\t\t\t}\n\t\t\tthat.getModel(\"appView\").setProperty(\"/addEnabled\", true);\n\t\t},\n\n\t\t/**\n\t\t * Event handler for the bypassed event, which is fired when no routing pattern matched.\n\t\t * If there was an object selected in the master list, that selection is removed.\n\t\t * @public\n\t\t */\n\t\tonBypassed: function() {\n\t\t\tthis._oList.removeSelections(true);\n\t\t},\n\n\t\t/**\n\t\t * Used to create GroupHeaders with non-capitalized caption.\n\t\t * These headers are inserted into the master list to\n\t\t * group the master list's items.\n\t\t * @param {Object} oGroup group whose text is to be displayed\n\t\t * @public\n\t\t * @returns {sap.m.GroupHeaderListItem} group header with non-capitalized caption.\n\t\t */\n\t\tcreateGroupHeader: function(oGroup) {\n\t\t\treturn new GroupHeaderListItem({\n\t\t\t\ttitle: oGroup.text,\n\t\t\t\tupperCase: false\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Navigates back in the browser history, if the entry was created by this app.\n\t\t * If not, it navigates to the Fiori Launchpad home page\n\t\t * @override\n\t\t * @public\n\t\t */\n\t\tonNavBack: function() {\n\t\t\tvar oHistory = sap.ui.core.routing.History.getInstance(),\n\t\t\t\tsPreviousHash = oHistory.getPreviousHash(),\n\t\t\t\toCrossAppNavigator = sap.ushell.Container.getService(\"CrossApplicationNavigation\");\n\n\t\t\tif (sPreviousHash !== undefined) {\n\t\t\t\t// The history contains a previous entry\n\t\t\t\thistory.go(-1);\n\t\t\t} else {\n\t\t\t\t// Navigate back to FLP home\n\t\t\t\toCrossAppNavigator.toExternal({\n\t\t\t\t\ttarget: {\n\t\t\t\t\t\tshellHash: \"#Shell-home\"\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Event handler  (attached declaratively) called when the add button in the master view is pressed. it opens the create view.\n\t\t * @public\n\t\t */\n\t\tonAdd: function() {\n\t\t\tthis.getModel(\"appView\").setProperty(\"/addEnabled\", false);\n\t\t\tthis.getRouter().getTargets().display(\"create\");\n\n\t\t},\n\n\t\t/* =========================================================== */\n\t\t/* begin: internal methods                                     */\n\t\t/* =========================================================== */\n\n\t\t/**\n\t\t * Creates the model for the view\n\t\t * @private\n\t\t */\n\t\t_createViewModel: function() {\n\t\t\treturn new JSONModel({\n\t\t\t\tisFilterBarVisible: false,\n\t\t\t\tfilterBarLabel: \"\",\n\t\t\t\tdelay: 0,\n\t\t\t\ttitle: this.getResourceBundle().getText(\"masterTitleCount\", [0]),\n\t\t\t\tnoDataText: this.getResourceBundle().getText(\"masterListNoDataText\"),\n\t\t\t\tsortBy: \"Title\",\n\t\t\t\tgroupBy: \"None\"\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Ask for user confirmation to leave the edit page and discard all changes\n\t\t * @param {object} fnLeave - handles discard changes\n\t\t * @param {object} fnLeaveCancelled - handles cancel\n\t\t * @private\n\t\t */\n\t\t_leaveEditPage: function(fnLeave, fnLeaveCancelled) {\n\t\t\tvar sQuestion = this.getResourceBundle().getText(\"warningConfirm\");\n\t\t\tvar sTitle = this.getResourceBundle().getText(\"warning\");\n\n\t\t\tMessageBox.show(sQuestion, {\n\t\t\t\ticon: MessageBox.Icon.WARNING,\n\t\t\t\ttitle: sTitle,\n\t\t\t\tactions: [MessageBox.Action.OK, MessageBox.Action.CANCEL],\n\t\t\t\tonClose: function(oAction) {\n\t\t\t\t\tif (oAction === MessageBox.Action.OK) {\n\t\t\t\t\t\tfnLeave();\n\t\t\t\t\t} else if (fnLeaveCancelled) {\n\t\t\t\t\t\tfnLeaveCancelled();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * If the master route was hit (empty hash) we have to set\n\t\t * the hash to to the first item in the list as soon as the\n\t\t * listLoading is done and the first item in the list is known\n\t\t * @private\n\t\t */\n\t\t_onMasterMatched: function() {\n\t\t\tthis._oListSelector.oWhenListLoadingIsDone.then(\n\t\t\t\tfunction(mParams) {\n\t\t\t\t\tif (mParams.list.getMode() === \"None\") {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis.getModel(\"appView\").setProperty(\"/addEnabled\", true);\n\t\t\t\t\tif (!mParams.list.getSelectedItem()) {\n\t\t\t\t\t\tthis.getRouter().navTo(\"object\", {\n\t\t\t\t\t\t\tId: encodeURIComponent(mParams.firstListitem.getBindingContext().getProperty(\"Id\"))\n\t\t\t\t\t\t}, true);\n\t\t\t\t\t}\n\t\t\t\t}.bind(this),\n\t\t\t\tfunction(mParams) {\n\t\t\t\t\tif (mParams.error) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis.getRouter().getTargets().display(\"detailNoObjectsAvailable\");\n\t\t\t\t}.bind(this)\n\t\t\t);\n\t\t},\n\n\t\t/**\n\t\t * Shows the selected item on the detail page\n\t\t * On phones a additional history entry is created\n\t\t * @param {sap.m.ObjectListItem} oItem selected Item\n\t\t * @private\n\t\t */\n\t\t_showDetail: function(oItem) {\n\t\t\tvar bReplace = !Device.system.phone;\n\t\t\tthis.getRouter().navTo(\"object\", {\n\t\t\t\tId: encodeURIComponent(oItem.getBindingContext().getProperty(\"Id\"))\n\t\t\t}, bReplace);\n\t\t},\n\n\t\t/**\n\t\t * Sets the item count on the master list header\n\t\t * @param {integer} iTotalItems the total number of items in the list\n\t\t * @private\n\t\t */\n\t\t_updateListItemCount: function(iTotalItems) {\n\t\t\tvar sTitle;\n\t\t\t// only update the counter if the length is final\n\t\t\tif (this._oList.getBinding(\"items\").isLengthFinal()) {\n\t\t\t\tsTitle = this.getResourceBundle().getText(\"masterTitleCount\", [iTotalItems]);\n\t\t\t\tthis.getModel(\"masterView\").setProperty(\"/title\", sTitle);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Internal helper method to apply both filter and search state together on the list binding\n\t\t * @private\n\t\t */\n\t\t_applyFilterSearch: function() {\n\t\t\tvar aFilters = this._oListFilterState.aSearch.concat(this._oListFilterState.aFilter),\n\t\t\t\toViewModel = this.getModel(\"masterView\");\n\t\t\tthis._oList.getBinding(\"items\").filter(aFilters, \"Application\");\n\t\t\t// changes the noDataText of the list in case there are no filter results\n\t\t\tif (aFilters.length !== 0) {\n\t\t\t\toViewModel.setProperty(\"/noDataText\", this.getResourceBundle().getText(\"masterListNoDataWithFilterOrSearchText\"));\n\t\t\t} else if (this._oListFilterState.aSearch.length > 0) {\n\t\t\t\t// only reset the no data text to default when no new search was triggered\n\t\t\t\toViewModel.setProperty(\"/noDataText\", this.getResourceBundle().getText(\"masterListNoDataText\"));\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Internal helper method to apply both group and sort state together on the list binding\n\t\t * @private\n\t\t */\n\t\t_applyGroupSort: function(aSorters) {\n\t\t\tthis._oList.getBinding(\"items\").sort(aSorters);\n\t\t},\n\n\t\t/**\n\t\t * Internal helper method that sets the filter bar visibility property and the label's caption to be shown\n\t\t * @param {string} sFilterBarText the selected filter value\n\t\t * @private\n\t\t */\n\t\t_updateFilterBar: function(sFilterBarText) {\n\t\t\tvar oViewModel = this.getModel(\"masterView\");\n\t\t\toViewModel.setProperty(\"/isFilterBarVisible\", (this._oListFilterState.aFilter.length > 0));\n\t\t\toViewModel.setProperty(\"/filterBarLabel\", this.getResourceBundle().getText(\"masterFilterBarText\", [sFilterBarText]));\n\t\t},\n\n\t\t/**\n\t\t * Internal helper method that adds \"/\" to the item's path\n\t\t * @private\n\t\t */\n\t\t_fnGetPathWithSlash: function(sPath) {\n\t\t\treturn (sPath.indexOf(\"/\") === 0 ? \"\" : \"/\") + sPath;\n\t\t},\n\n\t\t/**\n\t\t * It navigates to the saved itemToSelect item. After delete it navigate to the next item.\n\t\t * After add it navigates to the new added item if it is displayed in the tree. If not it navigates to the first item.\n\t\t * @private\n\t\t */\n\t\t_findItem: function() {\n\t\t\tvar itemToSelect = this.getModel(\"appView\").getProperty(\"/itemToSelect\");\n\t\t\tif (itemToSelect) {\n\t\t\t\tvar sPath = this._fnGetPathWithSlash(itemToSelect);\n\t\t\t\tvar oItem = this._oListSelector.findListItem(sPath);\n\t\t\t\tif (!oItem) { //item is not viewable in the tree. not in the current tree page.\n\t\t\t\t\toItem = this._oListSelector.findFirstItem();\n\t\t\t\t\tif (oItem) {\n\t\t\t\t\t\tsPath = oItem.getBindingContext().getPath();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.getRouter().getTargets().display(\"detailNoObjectsAvailable\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._oListSelector.selectAListItem(sPath);\n\t\t\t\tthis._showDetail(oItem);\n\t\t\t}\n\t\t}\n\n\t});\n});",
		"de/asr/library/booksdbapp/model/models.js": "sap.ui.define([\r\n\t\"sap/ui/model/json/JSONModel\",\r\n\t\"sap/ui/Device\"\r\n], function(JSONModel, Device) {\r\n\t\"use strict\";\r\n\r\n\treturn {\r\n\t\tcreateDeviceModel: function() {\r\n\t\t\tvar oModel = new JSONModel(Device);\r\n\t\t\toModel.setDefaultBindingMode(\"OneWay\");\r\n\t\t\treturn oModel;\r\n\t\t},\r\n\r\n\t\tcreateFLPModel: function() {\r\n\t\t\tvar fnGetuser = jQuery.sap.getObject(\"sap.ushell.Container.getUser\"),\r\n\t\t\t\tbIsShareInJamActive = fnGetuser ? fnGetuser().isJamActive() : false,\r\n\t\t\t\toModel = new JSONModel({\r\n\t\t\t\t\tisShareInJamActive: bIsShareInJamActive\r\n\t\t\t\t});\r\n\t\t\toModel.setDefaultBindingMode(\"OneWay\");\r\n\t\t\treturn oModel;\r\n\t\t}\r\n\t};\r\n\r\n});",
		"de/asr/library/booksdbapp/model/grouper.js": "sap.ui.define([], function() {\n\t\"use strict\";\n\n\t/*\n\t * Use this file to implement your custom grouping functions\n\t * The predefined functions are simple examples and might be replaced by your more complex implementations\n\t * to be called with .bind() and handed over to a sap.ui.model.Sorter\n\t * return value for all your functions is an object with  key-text pairs\n\t * the oContext parameter is not under your control!\n\t */\n\n\treturn {\n\n\t\t/**\n\t\t * Groups the items by a price in two groups: Lesser equal than 20 and greater than 20\n\t\t * This grouping function needs the resource bundle so we pass it as a dependency\n\t\t * @param oResourceBundle {sap.ui.model.resource.ResourceModel} the resource bundle of your i18n model\n\t\t * @returns {Function} the grouper function you can pass to your sorter\n\t\t */\n\t\tRating: function(oResourceBundle) {\n\t\t\treturn function(oContext) {\n\t\t\t\tvar iPrice = oContext.getProperty(\"Rating\"),\n\t\t\t\t\tsKey,\n\t\t\t\t\tsText;\n\n\t\t\t\tif (iPrice <= 20) {\n\t\t\t\t\tsKey = \"LE20\";\n\t\t\t\t\tsText = oResourceBundle.getText(\"masterGroup1Header1\");\n\t\t\t\t} else {\n\t\t\t\t\tsKey = \"GT20\";\n\t\t\t\t\tsText = oResourceBundle.getText(\"masterGroup1Header2\");\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tkey: sKey,\n\t\t\t\t\ttext: sText\n\t\t\t\t};\n\t\t\t};\n\t\t}\n\n\t};\n});",
		"de/asr/library/booksdbapp/view/DetailNoObjectsAvailable.view.xml": "<mvc:View controllerName=\"de.asr.library.booksdbapp.controller.BaseController\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\">\n\t<MessagePage id=\"page\" title=\"{i18n>notAvailableViewTitle}\" text=\"{i18n>noObjectsAvailableText}\" icon=\"{sap-icon://product}\" description=\"\"\n\t\tshowNavButton=\"{device>/system/phone}\" navButtonPress=\"onNavBack\"></MessagePage>\n</mvc:View>",
		"de/asr/library/booksdbapp/view/App.view.xml": "<mvc:View controllerName=\"de.asr.library.booksdbapp.controller.App\" xmlns:mvc=\"sap.ui.core.mvc\" displayBlock=\"true\" busy=\"{appView>/busy}\"\n\tbusyIndicatorDelay=\"{appView>/delay}\" xmlns=\"sap.m\">\n\t<SplitApp id=\"idAppControl\"/>\n</mvc:View>",
		"de/asr/library/booksdbapp/view/Detail.view.xml": "<mvc:View controllerName=\"de.asr.library.booksdbapp.controller.Detail\" xmlns=\"sap.m\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns:f=\"sap.ui.layout.form\"\n\txmlns:semantic=\"sap.m.semantic\" xmlns:footerbar=\"sap.ushell.ui.footerbar\">\n\t<semantic:DetailPage id=\"page\" navButtonPress=\"onNavBack\" showNavButton=\"{device>/system/phone}\" title=\"{i18n>detailTitle}\"\n\t\tbusy=\"{detailView>/busy}\" busyIndicatorDelay=\"{detailView>/delay}\">\n\t\t<semantic:content>\n\t\t\t<ObjectHeader id=\"objectHeader\" title=\"{Title}\">\n<!--\n\t\t\t\t<firstStatus><ObjectStatus id=\"objectStatus1\" text=\"{LocationString}\" state=\"None\"/></firstStatus>\n-->\n\t\t\t\t<statuses><ObjectStatus id=\"objectStatus1\" text=\"{LocationString}\" state=\"None\"/></statuses>\n\t\t\t\t<attributes><ObjectAttribute id=\"objectAttribute1\" text=\"{AuthorsString}\"/><ObjectAttribute id=\"objectAttribute2\" text=\"{Isbn13}\"/></attributes>\n\t\t\t</ObjectHeader>\n\t\t\t<IconTabBar id=\"iconTabBar\" class=\"sapUiResponsiveContentPadding\">\n\t\t\t\t<items>\n\t\t\t\t\t<IconTabFilter id=\"iconTabBarFilter1\" icon=\"sap-icon://picture\" text=\"{i18n>detailIconTabBarCover}\" tooltip=\"{i18n>detailIconTabBarCover}\">\n\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t<Image src=\"{ThumbnailUrl}\" tooltip=\"{i18n>coverImage}\"/>\n\t\t\t\t\t\t</content>\n\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t<IconTabFilter id=\"iconTabBarFilter2\" icon=\"sap-icon://notes\" text=\"{i18n>detailIconTabBarText}\" tooltip=\"{i18n>detailIconTabBarText}\">\n\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t<VBox class=\"sapUiSmallMargin\"><Text text=\"{Description}\"/></VBox>\n\t\t\t\t\t\t</content>\n\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t<IconTabFilter id=\"iconTabBarFilter3\" icon=\"sap-icon://list\" text=\"{i18n>detailIconTabBarDetails}\" tooltip=\"{i18n>detailIconTabBarDetails}\">\n\t\t\t\t\t\t<content>\n<!--\nclass=\"editableForm\" \neditable=\"true\" \n-->\n\t\t\t<f:SimpleForm columnsL=\"1\" columnsM=\"1\" editable=\"false\" emptySpanL=\"4\" emptySpanM=\"4\" id=\"newDetailsSimpleForm\"\n\t\t\t\tlabelSpanL=\"3\" labelSpanM=\"3\" layout=\"ResponsiveGridLayout\" maxContainerCols=\"2\" minWidth=\"1024\"\n\t\t\t\ttitle=\"{= ${viewModel>/mode} === 'edit'? 'Edit BooksDB.Book': 'New BooksDB.Book'}\">\n\t\t\t\t<f:content>\n\t\t\t\t\t<Label text=\"{i18n>Books.LocationString}\" id=\"LocationStringLabel_id\" required=\"false\"/>\n\t\t\t\t\t<Input name=\"LocationString\" id=\"LocationString_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" editable=\"false\" enabled=\"true\"\n\t\t\t\t\t\tvisible=\"true\" value=\"{ path: 'LocationString', type: 'sap.ui.model.odata.type.String' }\"/>\n\t\t\t\t\t<Label text=\"{i18n>Books.Title}\" id=\"TitleLabel_id\" required=\"false\"/>\n\t\t\t\t\t<Input name=\"Title\" id=\"Title_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" editable=\"false\" enabled=\"true\" visible=\"true\"\n\t\t\t\t\t\tvalue=\"{ path: 'Title', type: 'sap.ui.model.odata.type.String' }\"/>\n\t\t\t\t\t<Label text=\"{i18n>Books.Subtitle}\" id=\"SubtitleLabel_id\" required=\"false\"/>\n\t\t\t\t\t<Input name=\"Subtitle\" id=\"Subtitle_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" editable=\"false\" enabled=\"true\" visible=\"true\"\n\t\t\t\t\t\tvalue=\"{ path: 'Subtitle', type: 'sap.ui.model.odata.type.String' }\"/>\n\t\t\t\t\t<Label text=\"{i18n>Books.AuthorsString}\" id=\"AuthorsStringLabel_id\" required=\"false\"/>\n\t\t\t\t\t<Input name=\"AuthorsString\" id=\"AuthorsString_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" editable=\"false\" enabled=\"true\" visible=\"true\"\n\t\t\t\t\t\tvalue=\"{ path: 'AuthorsString', type: 'sap.ui.model.odata.type.String' }\"/>\n\t\t\t\t\t<Label text=\"{i18n>Books.Description}\" id=\"DescriptionLabel_id\" required=\"false\"/>\n\t\t\t\t\t<Input name=\"Description\" id=\"Description_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" editable=\"false\" enabled=\"true\" visible=\"true\"\n\t\t\t\t\t\tvalue=\"{ path: 'Description', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:10000 } }\"/>\n\t\t\t\t\t<Label text=\"{i18n>Books.ThumbnailUrl}\" id=\"ThumbnailUrlLabel_id\" required=\"false\"/>\n\t\t\t\t\t<Input name=\"ThumbnailUrl\" id=\"ThumbnailUrl_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" editable=\"false\" enabled=\"true\" visible=\"true\"\n\t\t\t\t\t\tvalue=\"{ path: 'ThumbnailUrl', type: 'sap.ui.model.odata.type.String' }\"/>\n\t\t\t\t\t<Label text=\"{i18n>Books.Isbn10}\" id=\"Isbn10Label_id\" required=\"false\"/>\n\t\t\t\t\t<Input name=\"Isbn10\" id=\"Isbn10_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" editable=\"false\" enabled=\"true\" visible=\"true\"\n\t\t\t\t\t\tvalue=\"{ path: 'Isbn10', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:10 } }\"/>\n\t\t\t\t\t<Label text=\"{i18n>Books.Isbn13}\" id=\"Isbn13Label_id\" required=\"false\"/>\n\t\t\t\t\t<Input name=\"Isbn13\" id=\"Isbn13_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" editable=\"false\" enabled=\"true\" visible=\"true\"\n\t\t\t\t\t\tvalue=\"{ path: 'Isbn13', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:13 } }\"/>\n\t\t\t\t\t<Label text=\"{i18n>Books.PageCount}\" id=\"PageCountLabel_id\" required=\"false\"/>\n\t\t\t\t\t<Input name=\"PageCount\" id=\"PageCount_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" editable=\"false\" enabled=\"true\" visible=\"true\"\n\t\t\t\t\t\tvalue=\"{ path: 'PageCount', type: 'sap.ui.model.odata.type.String' }\"/>\n\t\t\t\t\t<Label text=\"{i18n>Books.PublishedDate}\" id=\"PublishedDateLabel_id\" required=\"false\"/>\n\t\t\t\t\t<Input name=\"PublishedDate\" id=\"PublishedDate_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" editable=\"false\" enabled=\"true\" visible=\"true\"\n\t\t\t\t\t\tvalue=\"{ path: 'PublishedDate', type: 'sap.ui.model.odata.type.String' }\"/>\n\t\t\t\t\t<Label text=\"{i18n>Books.PublisherString}\" id=\"PublisherStringLabel_id\" required=\"false\"/>\n\t\t\t\t\t<Input name=\"PublisherString\" id=\"PublisherString_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" editable=\"false\" enabled=\"true\"\n\t\t\t\t\t\tvisible=\"true\" value=\"{ path: 'PublisherString', type: 'sap.ui.model.odata.type.String' }\"/>\n<!--\n\t\t\t\t\t<Label text=\"{i18n>Books.PrintType}\" id=\"PrintTypeLabel_id\" required=\"false\"/>\n\t\t\t\t\t<Input name=\"PrintType\" id=\"PrintType_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" editable=\"false\" enabled=\"true\" visible=\"true\"\n\t\t\t\t\t\tvalue=\"{ path: 'PrintType', type: 'sap.ui.model.odata.type.String' }\"/>\n-->\n<!--\n\t\t\t\t\t<Label text=\"{i18n>Books.Rating}\" id=\"RatingLabel_id\" required=\"false\"/>\n\t\t\t\t\t<Input name=\"Rating\" id=\"Rating_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" editable=\"false\" enabled=\"true\" visible=\"true\"\n\t\t\t\t\t\tvalue=\"{ path: 'Rating', type: 'sap.ui.model.odata.type.String' }\"/>\n-->\n<!--\n\t\t\t\t\t<Label text=\"{i18n>Books.SmallThumbnail}\" id=\"SmallThumbnailLabel_id\" required=\"false\"/>\n\t\t\t\t\t<Input name=\"SmallThumbnail\" id=\"SmallThumbnail_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" editable=\"false\" enabled=\"true\"\n\t\t\t\t\t\tvisible=\"true\" value=\"{ path: 'SmallThumbnail', type: 'sap.ui.model.odata.type.String' }\"/>\n-->\n<!--\n\t\t\t\t\t<Label text=\"{i18n>Books.SmallThumbnailUrl}\" required=\"false\"/>\n\t\t\t\t\t<Input name=\"SmallThumbnailUrl\" id=\"SmallThumbnailUrl_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" editable=\"false\" enabled=\"true\"\n\t\t\t\t\t\tvisible=\"true\" value=\"{ path: 'SmallThumbnailUrl', type: 'sap.ui.model.odata.type.String' }\"/>\n-->\n<!--\n\t\t\t\t\t<Label text=\"{i18n>Books.Thumbnail}\" required=\"false\"/>\n\t\t\t\t\t<Input name=\"Thumbnail\" id=\"Thumbnail_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" editable=\"false\" enabled=\"true\" visible=\"true\"\n\t\t\t\t\t\tvalue=\"{ path: 'Thumbnail', type: 'sap.ui.model.odata.type.String' }\"/>\n-->\n\t\t\t\t</f:content>\n\t\t\t</f:SimpleForm>\n\t\t\t\t\t\t</content>\n\t\t\t\t\t</IconTabFilter>\n\t\t\t\t</items>\n\t\t\t</IconTabBar>\n\t\t</semantic:content>\n\t\t<semantic:editAction>\n\t\t\t<semantic:EditAction id=\"edit\" press=\"onEdit\"/>\n\t\t</semantic:editAction>\n\t\t<semantic:customFooterContent>\n\t\t\t<Button enabled=\"true\" id=\"deleteButton\" press=\"onDelete\" text=\"Delete\"/>\n\t\t</semantic:customFooterContent>\n\t\t<semantic:sendEmailAction>\n\t\t\t<semantic:SendEmailAction id=\"shareEmail\" press=\"onShareEmailPress\"/>\n\t\t</semantic:sendEmailAction>\n\t\t<semantic:shareInJamAction>\n\t\t\t<semantic:ShareInJamAction id=\"shareInJam\" visible=\"{FLP>/isShareInJamActive}\" press=\"onShareInJamPress\"/>\n\t\t</semantic:shareInJamAction>\n\t\t<semantic:saveAsTileAction>\n\t\t\t<footerbar:AddBookmarkButton id=\"shareTile\" title=\"{detailView>/saveAsTileTitle}\"/>\n\t\t</semantic:saveAsTileAction>\n\t</semantic:DetailPage>\n</mvc:View>",
		"de/asr/library/booksdbapp/view/CreateEntity.view.xml": "<mvc:View controllerName=\"de.asr.library.booksdbapp.controller.CreateEntity\" xmlns:core=\"sap.ui.core\" xmlns:f=\"sap.ui.layout.form\"\n\txmlns:footerbar=\"sap.ushell.ui.footerbar\" xmlns:l=\"sap.ui.layout\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns:semantic=\"sap.m.semantic\"\n\txmlns:smart=\"sap.ui.comp.smartfield\" xmlns:ndc=\"sap.ndc\" xmlns=\"sap.m\">\n\t<semantic:DetailPage id=\"page\" navButtonPress=\"onNavBack\" title=\"{viewModel>/viewTitle}\" busy=\"{viewModel>/busy}\">\n\t\t<semantic:content>\n\t\t\t<f:SimpleForm class=\"editableForm\" columnsL=\"1\" columnsM=\"1\" editable=\"true\" emptySpanL=\"4\" emptySpanM=\"4\" id=\"newEntitySimpleForm\"\n\t\t\t\tlabelSpanL=\"3\" labelSpanM=\"3\" layout=\"ResponsiveGridLayout\" maxContainerCols=\"2\" minWidth=\"1024\"\n\t\t\t\ttitle=\"{= ${viewModel>/mode} === 'edit'? ${i18n>CreateEntityFormTitleEditMode} : ${i18n>CreateEntityFormTitleCreateMode}}\">\n\t\t\t\t<f:content>\n\t\t\t\t\t<Label text=\"{i18n>Books.LocationString}\" id=\"LocationStringLabel_id\" required=\"true\"/>\n\t\t\t\t\t<Input name=\"LocationString\" id=\"LocationString_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"true\"\n\t\t\t\t\t\tvisible=\"true\" value=\"{ path: 'LocationString', type: 'sap.ui.model.odata.type.String' }\"/>\n\t\t\t\t\t<Label text=\"{i18n>Books.Title}\" id=\"TitleLabel_id\" required=\"false\"/>\n\t\t\t\t\t<Input name=\"Title\" id=\"Title_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"true\" visible=\"true\"\n\t\t\t\t\t\tvalue=\"{ path: 'Title', type: 'sap.ui.model.odata.type.String' }\"/>\n\t\t\t\t\t<Label text=\"{i18n>Books.Subtitle}\" id=\"SubtitleLabel_id\" required=\"false\"/>\n\t\t\t\t\t<Input name=\"Subtitle\" id=\"Subtitle_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"true\" visible=\"true\"\n\t\t\t\t\t\tvalue=\"{ path: 'Subtitle', type: 'sap.ui.model.odata.type.String' }\"/>\n\t\t\t\t\t<Label text=\"{i18n>Books.AuthorsString}\" id=\"AuthorsStringLabel_id\" required=\"false\"/>\n\t\t\t\t\t<Input name=\"AuthorsString\" id=\"AuthorsString_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"true\" visible=\"true\"\n\t\t\t\t\t\tvalue=\"{ path: 'AuthorsString', type: 'sap.ui.model.odata.type.String' }\"/>\n\t\t\t\t\t<Label text=\"{i18n>Books.Description}\" id=\"DescriptionLabel_id\" required=\"false\"/>\n\t\t\t\t\t<Input name=\"Description\" id=\"Description_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"true\" visible=\"true\"\n\t\t\t\t\t\tvalue=\"{ path: 'Description', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:10000 } }\"/>\n\t\t\t\t\t<Label text=\"{i18n>Books.ThumbnailUrl}\" id=\"ThumbnailUrlLabel_id\" required=\"false\"/>\n\t\t\t\t\t<Input name=\"ThumbnailUrl\" id=\"ThumbnailUrl_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"true\" visible=\"true\"\n\t\t\t\t\t\tvalue=\"{ path: 'ThumbnailUrl', type: 'sap.ui.model.odata.type.String' }\"/>\n\t\t\t\t\t<Label text=\"{i18n>Books.SmallThumbnailUrl}\" id=\"SmallThumbnailUrlLabel_id\" required=\"false\"/>\n\t\t\t\t\t<Input name=\"SmallThumbnailUrl\" id=\"SmallThumbnailUrl_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"true\" visible=\"true\"\n\t\t\t\t\t    value=\"{ path: 'SmallThumbnailUrl', type: 'sap.ui.model.odata.type.String' }\"/>\n\t\t\t\t\t<Label text=\"{i18n>Books.Isbn10}\" id=\"Isbn10Label_id\" required=\"false\"/>\n\t\t\t\t\t<Input name=\"Isbn10\" id=\"Isbn10_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"true\" visible=\"true\"\n\t\t\t\t\t\tvalue=\"{ path: 'Isbn10', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:10 } }\"/>\n\t\t\t\t\t<Label text=\"{i18n>Books.Isbn13}\" id=\"Isbn13Label_id\" required=\"false\"/>\n\t\t\t\t\t<Input name=\"Isbn13\" id=\"Isbn13_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"true\" visible=\"true\"\n\t\t\t\t\t\tvalue=\"{ path: 'Isbn13', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:13 } }\"/>\n\t\t\t\t\t<Label text=\"{i18n>Books.PageCount}\" id=\"PageCountLabel_id\" required=\"false\"/>\n\t\t\t\t\t<Input name=\"PageCount\" id=\"PageCount_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"true\" visible=\"true\"\n\t\t\t\t\t\tvalue=\"{ path: 'PageCount', type: 'sap.ui.model.odata.type.String' }\"/>\n\t\t\t\t\t<Label text=\"{i18n>Books.PublishedDate}\" id=\"PublishedDateLabel_id\" required=\"false\"/>\n\t\t\t\t\t<Input name=\"PublishedDate\" id=\"PublishedDate_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"true\" visible=\"true\"\n\t\t\t\t\t\tvalue=\"{ path: 'PublishedDate', type: 'sap.ui.model.odata.type.String' }\"/>\n\t\t\t\t\t<Label text=\"{i18n>Books.PublisherString}\" id=\"PublisherStringLabel_id\" required=\"false\"/>\n\t\t\t\t\t<Input name=\"PublisherString\" id=\"PublisherString_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"true\"\n\t\t\t\t\t\tvisible=\"true\" value=\"{ path: 'PublisherString', type: 'sap.ui.model.odata.type.String' }\"/>\n\t\t\t\t\t<Label text=\"{i18n>Books.PrintType}\" id=\"PrintTypeLabel_id\" required=\"false\"/>\n\t\t\t\t\t<Input name=\"PrintType\" id=\"PrintType_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"true\" visible=\"true\"\n\t\t\t\t\t\tvalue=\"{ path: 'PrintType', type: 'sap.ui.model.odata.type.String' }\"/>\n\t\t\t\t\t<Label text=\"{i18n>Books.Rating}\" id=\"RatingLabel_id\" required=\"false\"/>\n\t\t\t\t\t<Input name=\"Rating\" id=\"Rating_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"true\" visible=\"true\"\n\t\t\t\t\t\tvalue=\"{ path: 'Rating', type: 'sap.ui.model.odata.type.String' }\"/>\n\t\t\t\t</f:content>\n\t\t\t</f:SimpleForm>\n\t\t</semantic:content>\n\t\t<semantic:customFooterContent>\n\t\t\t<ndc:BarcodeScannerButton name=\"ScanIsbn13\" id=\"ScanIsbn13_id\" scanSuccess=\"onScanSuccess\" scanFail=\"onScanFail\" inputLiveUpdate=\"onScanInputLiveUpdate\"/>\t\t\n\t\t</semantic:customFooterContent>\n\t\t<semantic:saveAction>\n<!--\n\t\t\t<semantic:SaveAction id=\"save\" enabled=\"{viewModel>/enableCreate}\" press=\"onSave\"/>\n-->\n\t\t\t<semantic:SaveAction id=\"save\" enabled=\"true\" press=\"onSave\"/>\n\t\t</semantic:saveAction>\n\t\t<semantic:cancelAction>\n\t\t\t<semantic:CancelAction id=\"cancel\" press=\"onCancel\"></semantic:CancelAction>\n\t\t</semantic:cancelAction>\n\t</semantic:DetailPage>\n</mvc:View>",
		"de/asr/library/booksdbapp/model/GroupSortState.js": "sap.ui.define([\r\n\t\"sap/ui/base/Object\",\r\n\t\"sap/ui/model/Sorter\"\r\n], function(BaseObject, Sorter) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseObject.extend(\"de.asr.library.booksdbapp.model.GroupSortState\", {\r\n\r\n\t\t/**\r\n\t\t * Creates sorters and groupers for the master list.\r\n\t\t * Since grouping also means sorting, this class modifies the viewmodel.\r\n\t\t * If a user groups by a field, and there is a corresponding sort option, the option will be chosen.\r\n\t\t * If a user ungroups, the sorting will be reset to the default sorting.\r\n\t\t * @class\r\n\t\t * @public\r\n\t\t * @alias de.asr.library.booksdbapp.model.GroupSortState\r\n\t\t */\r\n\t\tconstructor: function(oViewModel, fnGroupFunction) {\r\n\t\t\tthis._oViewModel = oViewModel;\r\n\t\t\tthis._fnGroupFunction = fnGroupFunction;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Sorts by Title, or by \r\n\t\t *\r\n\t\t * @param sKey - the key of the field used for grouping\r\n\t\t * @returns {sap.ui.model.Sorter[]} an array of sorters\r\n\t\t */\r\n\t\tsort: function(sKey) {\r\n\t\t\tvar sGroupedBy = this._oViewModel.getProperty(\"/groupBy\");\r\n\r\n\t\t\tif (sGroupedBy !== \"None\") {\r\n\t\t\t\t// If the list is grouped, remove the grouping since the user wants to sort by something different\r\n\t\t\t\t// Grouping only works if the list is primary sorted by the grouping - the first sorten contains a grouper function\r\n\t\t\t\tthis._oViewModel.setProperty(\"/groupBy\", \"None\");\r\n\t\t\t}\r\n\r\n\t\t\treturn [new Sorter(sKey, false)];\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Groups by , or resets the grouping for the key \"None\"\r\n\t\t *\r\n\t\t * @param sKey - the key of the field used for grouping\r\n\t\t * @returns {sap.ui.model.Sorter[]} an array of sorters\r\n\t\t */\r\n\t\tgroup: function(sKey) {\r\n\t\t\tvar aSorters = [];\r\n\r\n\t\t\tif (sKey === \"\") {\r\n\t\t\t\t// Grouping means sorting so we set the select to the same Entity used for grouping\r\n\t\t\t\tthis._oViewModel.setProperty(\"/sortBy\", \"\");\r\n\r\n\t\t\t\taSorters.push(\r\n\t\t\t\t\tnew Sorter(\"\", false,\r\n\t\t\t\t\t\tthis._fnGroupFunction.bind(this))\r\n\t\t\t\t);\r\n\t\t\t} else if (sKey === \"None\") {\r\n\t\t\t\t// select the default sorting again\r\n\t\t\t\tthis._oViewModel.setProperty(\"/sortBy\", \"Title\");\r\n\t\t\t}\r\n\r\n\t\t\treturn aSorters;\r\n\t\t}\r\n\r\n\t});\r\n});",
		"de/asr/library/booksdbapp/view/DetailObjectNotFound.view.xml": "<mvc:View controllerName=\"de.asr.library.booksdbapp.controller.BaseController\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\">\n\t<MessagePage id=\"page\" title=\"{i18n>detailTitle}\" text=\"{i18n>noObjectFoundText}\" icon=\"{sap-icon://product}\" description=\"\"\n\t\tshowNavButton=\"{device>/system/phone}\" navButtonPress=\"onNavBack\"></MessagePage>\n</mvc:View>",
		"de/asr/library/booksdbapp/view/ViewSettingsDialog.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\">\n\t<ViewSettingsDialog id=\"viewSettingsDialog\" confirm=\"onConfirmViewSettingsDialog\" resetFilters=\"onViewSettingsDialogResetFilters\">\n\t\t<filterItems>\n\t\t\t<ViewSettingsFilterItem id=\"filterItems\" text=\"{i18n>masterFilterName}\" key=\"Price\" multiSelect=\"false\">\n\t\t\t\t<items>\n\t\t\t\t\t<ViewSettingsItem text=\"{i18n>masterFilter1}\" key=\"Filter1\" id=\"viewFilter1\"/>\n\t\t\t\t\t<ViewSettingsItem text=\"{i18n>masterFilter2}\" key=\"Filter2\" id=\"viewFilter2\"/>\n\t\t\t\t</items>\n\t\t\t</ViewSettingsFilterItem>\n\t\t</filterItems>\n\t</ViewSettingsDialog>\n</core:FragmentDefinition>",
		"de/asr/library/booksdbapp/view/NotFound.view.xml": "<mvc:View controllerName=\"de.asr.library.booksdbapp.controller.BaseController\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\">\n\t<MessagePage id=\"page\" title=\"{i18n>notFoundTitle}\" text=\"{i18n>notFoundText}\" icon=\"{sap-icon://document}\" description=\"\"\n\t\tshowNavButton=\"{device>/system/phone}\" navButtonPress=\"onNavBack\"></MessagePage>\n</mvc:View>",
		"de/asr/library/booksdbapp/view/Master.view.xml": "<mvc:View controllerName=\"de.asr.library.booksdbapp.controller.Master\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns:core=\"sap.ui.core\" xmlns=\"sap.m\"\n\txmlns:semantic=\"sap.m.semantic\">\n\t<semantic:MasterPage id=\"page\" title=\"{masterView>/title}\" navButtonPress=\"onNavBack\" showNavButton=\"true\">\n\t\t<semantic:subHeader>\n\t\t\t<Bar id=\"headerBar\">\n\t\t\t\t<contentMiddle>\n\t\t\t\t\t<SearchField id=\"searchField\" showRefreshButton=\"{= !${device>/support/touch} }\" tooltip=\"{i18n>masterSearchTooltip}\" width=\"100%\"\n\t\t\t\t\t\tsearch=\"onSearch\"></SearchField>\n\t\t\t\t</contentMiddle>\n\t\t\t</Bar>\n\t\t</semantic:subHeader>\n\t\t<semantic:content>\n\t\t\t<PullToRefresh id=\"pullToRefresh\" visible=\"{device>/support/touch}\" refresh=\"onRefresh\"/>\n\t\t\t<!-- For client side filtering add this to the items attribute:  parameters: {operationMode: 'Client'}}\" -->\n\t\t\t<List id=\"list\" items=\"{ path: '/Books', sorter: { path: 'Title', descending: false }, groupHeaderFactory: '.createGroupHeader' }\"\n\t\t\t\tbusyIndicatorDelay=\"{masterView>/delay}\" noDataText=\"{masterView>/noDataText}\"\n\t\t\t\tmode=\"{= ${device>/system/phone} ? 'None' : 'SingleSelectMaster'}\" growing=\"true\" growingScrollToLoad=\"true\"\n\t\t\t\tupdateFinished=\"onUpdateFinished\" selectionChange=\"onSelectionChange\">\n\t\t\t\t<infoToolbar>\n\t\t\t\t\t<Toolbar active=\"true\" id=\"filterBar\" visible=\"{masterView>/isFilterBarVisible}\" press=\"onOpenViewSettings\">\n\t\t\t\t\t\t<Title id=\"filterBarLabel\" text=\"{masterView>/filterBarLabel}\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</infoToolbar>\n\t\t\t\t<items>\n\t\t\t\t\t<ObjectListItem id=\"objectListItem\" type=\"{= ${device>/system/phone} ? 'Active' : 'Inactive'}\" press=\"onSelectionChange\" title=\"{Title}\">\n\t\t\t\t\t\t<firstStatus><ObjectStatus text=\"{LocationString}\" state=\"None\"/></firstStatus>\n\t\t\t\t\t\t<attributes><ObjectAttribute id=\"objectAttribute\" text=\"{AuthorsString}\"/></attributes>\n\t\t\t\t\t</ObjectListItem>\n\t\t\t\t</items>\n\t\t\t</List>\n\t\t</semantic:content>\n\t\t<semantic:addAction>\n\t\t\t<semantic:AddAction id=\"addButton\" enabled=\"{appView>/addEnabled}\" press=\"onAdd\"/>\n\t\t</semantic:addAction>\n\t\t<semantic:sort>\n\t\t\t<semantic:SortSelect id=\"sort\" selectedKey=\"{masterView>/sortBy}\" change=\"onSort\">\n\t\t\t\t<core:Item id=\"masterSort1\" key=\"Title\" text=\"{i18n>masterSort1}\"/>\n\t\t\t\t<core:Item id=\"masterSort2\" key=\"Rating\" text=\"{i18n>masterSort2}\"/>\n\t\t\t</semantic:SortSelect>\n\t\t</semantic:sort>\n\t\t<semantic:filter>\n\t\t\t<semantic:FilterAction id=\"filter\" press=\"onOpenViewSettings\"/>\n\t\t</semantic:filter>\n\t\t<semantic:group>\n\t\t\t<semantic:GroupSelect id=\"group\" selectedKey=\"{masterView>/groupBy}\" change=\"onGroup\">\n\t\t\t\t<core:Item id=\"masterGroupNone\" key=\"None\" text=\"{i18n>masterGroupNone}\"/>\n\t\t\t\t<core:Item id=\"masterGroup1\" key=\"Rating\" text=\"{i18n>masterGroup1}\"/>\n\t\t\t</semantic:GroupSelect>\n\t\t</semantic:group>\n\t</semantic:MasterPage>\n</mvc:View>"
	}
});